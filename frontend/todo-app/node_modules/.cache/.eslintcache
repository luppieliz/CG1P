[{"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\index.js":"1","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\reportWebVitals.js":"2","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\App.js":"3","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Constants.js":"4","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\TodoApp.jsx":"5","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\LogoutComponent.jsx":"6","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\FooterComponent.jsx":"7","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\LoginComponent.jsx":"8","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ErrorComponent.jsx":"9","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\SignupComponent.jsx":"10","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ProfileComponent.jsx":"11","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ContactusComponent.jsx":"12","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\AboutusComponent.jsx":"13","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\OwnerSignupComponent.jsx":"14","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\HomeComponent.jsx":"15","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\WelcomeComponent.jsx":"16","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\HeaderComponent.jsx":"17","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\TodoComponent.jsx":"18","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\AuthenticatedRoute.jsx":"19","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\GeneralFaq.jsx":"20","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\NewsFeedComponent.jsx":"21","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\BusinessDataService.js":"22","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\AuthenticationService.js":"23","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\IndustryDataService.js":"24","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\UserDataService.js":"25","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ListTodosComponent.jsx":"26","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\TodoDataService.js":"27","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\HelloWorldService.js":"28","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\NewsDataService.js":"29","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\EmployeeManagementComponent.jsx":"30","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\FaqDataService.js":"31"},{"size":525,"mtime":1633762227520,"results":"32","hashOfConfig":"33"},{"size":375,"mtime":1633514869413,"results":"34","hashOfConfig":"33"},{"size":503,"mtime":1635763049652,"results":"35","hashOfConfig":"33"},{"size":686,"mtime":1636531007181,"results":"36","hashOfConfig":"33"},{"size":3201,"mtime":1636544634357,"results":"37","hashOfConfig":"33"},{"size":415,"mtime":1635763049675,"results":"38","hashOfConfig":"33"},{"size":3127,"mtime":1636515957792,"results":"39","hashOfConfig":"33"},{"size":6255,"mtime":1636551472064,"results":"40","hashOfConfig":"33"},{"size":208,"mtime":1635763049665,"results":"41","hashOfConfig":"33"},{"size":9808,"mtime":1636515957808,"results":"42","hashOfConfig":"33"},{"size":8951,"mtime":1636515665229,"results":"43","hashOfConfig":"33"},{"size":2208,"mtime":1636531007158,"results":"44","hashOfConfig":"33"},{"size":4416,"mtime":1636531007155,"results":"45","hashOfConfig":"33"},{"size":12187,"mtime":1636515957808,"results":"46","hashOfConfig":"33"},{"size":1863,"mtime":1636515665208,"results":"47","hashOfConfig":"33"},{"size":22242,"mtime":1636544634366,"results":"48","hashOfConfig":"33"},{"size":7795,"mtime":1636531007166,"results":"49","hashOfConfig":"33"},{"size":9497,"mtime":1636544634362,"results":"50","hashOfConfig":"33"},{"size":1384,"mtime":1636249921719,"results":"51","hashOfConfig":"33"},{"size":8322,"mtime":1636544634350,"results":"52","hashOfConfig":"33"},{"size":8496,"mtime":1636525009943,"results":"53","hashOfConfig":"33"},{"size":467,"mtime":1635763049706,"results":"54","hashOfConfig":"33"},{"size":1909,"mtime":1636249921733,"results":"55","hashOfConfig":"33"},{"size":474,"mtime":1635763049710,"results":"56","hashOfConfig":"33"},{"size":991,"mtime":1636515665280,"results":"57","hashOfConfig":"33"},{"size":5497,"mtime":1636544634354,"results":"58","hashOfConfig":"33"},{"size":861,"mtime":1636544634377,"results":"59","hashOfConfig":"33"},{"size":254,"mtime":1636249921735,"results":"60","hashOfConfig":"33"},{"size":587,"mtime":1636544634374,"results":"61","hashOfConfig":"33"},{"size":3297,"mtime":1636531007161,"results":"62","hashOfConfig":"33"},{"size":243,"mtime":1636544634369,"results":"63","hashOfConfig":"33"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"12opzag",{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136"},"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\index.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\reportWebVitals.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\App.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Constants.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\TodoApp.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\LogoutComponent.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\FooterComponent.jsx",["137","138"],"import React, { Component } from 'react';\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport { BsNewspaper } from \"@react-icons/all-files/bs/BsNewspaper\";\r\nimport { BsPerson}  from \"@react-icons/all-files/bs/BsPerson\";\r\nimport { AiOutlineHome } from \"@react-icons/all-files/ai/AiOutlineHome\";\r\nimport { FaQuestion} from \"@react-icons/all-files/fa/FaQuestion\";\r\n\r\n\r\n// Footer   \r\n\r\nclass FooterComponent extends Component {\r\n    render() {\r\n        return [\r\n            'Transparent',\r\n        ].map((variant, idx) => (\r\n            <footer className=\"footer\">\r\n                <Row>\r\n                    <Col>\r\n                        <Card bg={variant.toLowerCase()} >\r\n                            <h4 className=\"cg1p-header text-white text-center\">BUDDY-19</h4>\r\n                            <h5 className=\" cg1p-header text-white text-left\">Buddy-19 serves as both\r\n                                a one-stop information hub and a companion tool,\r\n                                providing services for business owners to better\r\n                                understand and manage the measures they have to\r\n                                take in the face of the pandemic.</h5>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card bg={variant.toLowerCase()} >\r\n                            <h4 className=\"cg1p-header text-white text-center\">Site Links</h4>\r\n                            <p className=\"text-center\"><AiOutlineHome/>{\" \"}Home<br /><BsPerson />{\" \"}Employees<br /><BsNewspaper/>{\" \"}News<br /><FaQuestion/>{\" \"}Faq\r\n                            </p>\r\n\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card bg={variant.toLowerCase()} >\r\n                            <h4 className=\"cg1p-header text-white text-center\">Location</h4>\r\n                            <p className=\"text-center\">81 Victoria St, Singapore 188065</p>\r\n                            <h4 className=\"cg1p-header text-white text-center\">Contact Us</h4>\r\n                            <p className=\"text-center\">Hello@Buddy19.com.sg <br/> +65 61234567</p>\r\n                        </Card>\r\n                    </Col>\r\n                    <Col>\r\n                        <Card bg={variant.toLowerCase()} >\r\n                            \r\n                            <iframe width=\"400\" height=\"150\" scrolling=\"no\"  src=\"https://maps.google.com/maps?width=100%25&amp;height=600&amp;hl=en&amp;q=81%20Victoria%20St,%20Singapore%20188065+(Your%20Business%20Name)&amp;t=&amp;z=14&amp;ie=UTF8&amp;iwloc=B&amp;output=embed\"><a href=\"https://www.mapsdirections.info/en/measure-map-radius/\">www.mapsdirections.info</a></iframe>\r\n                        </Card>\r\n                    </Col>\r\n                    <span className=\"text-muted\">Buddy-19. All Rights Reserved.</span>\r\n                </Row>\r\n\r\n                \r\n\r\n            </footer>\r\n        ))\r\n    }\r\n}\r\n\r\nexport default FooterComponent;","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\LoginComponent.jsx",["139"],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ErrorComponent.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\SignupComponent.jsx",["140"],"import React, { Component } from 'react'\r\nimport { Form, Formik, Field, ErrorMessage } from 'formik'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport BusinessDataService from '../api/BusinessDataService.js';\r\nimport UserDataService from '../api/UserDataService.js';\r\nimport { Link } from 'react-router-dom'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Placeholder from 'react-bootstrap/Placeholder'\r\nimport ReactNotification, { store } from 'react-notifications-component'\r\nimport 'react-notifications-component/dist/theme.css'\r\nimport GLOBE from 'vanta/dist/vanta.net.min'\r\n\r\n\r\nclass SignupComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            name: 'anrev',\r\n            email: 'A@A',\r\n            password: 'aaaaaaaaa',\r\n            businessUEN: 'aaaa',\r\n            business: {},\r\n        }\r\n        this.vantaRef = React.createRef()\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this);\r\n\r\n    }\r\n    componentDidMount() {\r\n        this.vantaEffect = GLOBE({\r\n          el: this.vantaRef.current,\r\n          mouseControls: true,\r\n          touchControls: true,\r\n          gyroControls: false,\r\n          minHeight: 200.0,\r\n          minWidth: 200.0,\r\n          scale: 1.0,\r\n          scaleMobile: 1.0,\r\n          color: 0x777777,\r\n          color2: 0xFFFFFF,\r\n          backgroundColor: 0x000000\r\n        })\r\n      }\r\n      componentWillUnmount() {\r\n        if (this.vantaEffect) this.vantaEffect.destroy()\r\n      }\r\n\r\n    onSubmit(values) {\r\n\r\n        let uen = values.businessUEN\r\n        BusinessDataService.retrieveBusiness(uen).then(\r\n            response => {\r\n                // this.setState({business: response.data})\r\n                // console.log(response)\r\n                let user = {\r\n                    email: values.email,\r\n                    name: values.name,\r\n                    password: values.password,\r\n                    shnStatus: false,\r\n                    covidStatus: false,\r\n                    authority: \"ROLE_EMPLOYEE\",\r\n                    business: response.data\r\n                }\r\n                UserDataService.createUser(user).then(() => { showSuccess() }).catch((error) => {\r\n                    throwError(error.response.data.message)\r\n                })\r\n            }\r\n        ).catch((error) => {\r\n            throwError(error.response.data.message)\r\n        })\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.name) {\r\n            throwWarning(\"Please Enter Your Name!\")\r\n            errors.name = \"Please Enter Your Name!\"\r\n        }\r\n        if (!values.email) {\r\n            throwWarning(\"Please Enter Your Email!\")\r\n            errors.email = \"Please Enter Your Email!\"\r\n        }\r\n        if (!values.password) {\r\n            throwWarning(\"Please Enter Your Password!\")\r\n            errors.password = \"Please Enter Your Password!\"\r\n        } else if (values.password.length < 8) {\r\n            throwWarning(\"Password has to be at least 8 characters long!\")\r\n            errors.password = \"Password has to be at least 8 characters long!\"\r\n        }\r\n        if (!values.businessUEN) {\r\n            throwWarning(\"Please Enter Your UEN!\")\r\n            errors.businessUEN = \"Please Enter Your UEN!\"\r\n        }\r\n        return errors\r\n    }\r\n\r\n    render() {\r\n        let { name, email, password, businessUEN } = this.state\r\n        return (\r\n            <div style={{ height: \"92vh\", width: \"100%\"}}  ref={this.vantaRef}>\r\n                <ReactNotification />\r\n                <Container>\r\n                    <Row>\r\n                        <Col></Col>\r\n                        <Col>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                            <h0 className=\"cg1p-header\">Buddy - 19</h0>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <h1 className=\"cg1p-header\" style={{color: \"white\"}}>Employee Signup</h1>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <Card className=\"dark\">\r\n                                <Card.Body>\r\n                                    <div className=\"container text-dark\">\r\n\r\n                                        <Formik\r\n                                            initialValues={{ name, email, password, businessUEN }}\r\n                                            onSubmit={this.onSubmit}\r\n                                            validateOnChange={false}\r\n                                            validateOnBlur={false}\r\n                                            validate={this.validate}\r\n                                            enableReinitialize={true}\r\n                                        >\r\n                                            {\r\n                                                (props) => (\r\n                                                    <Form>\r\n                                                        {/* <ErrorMessage name=\"name\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\r\n                                                <ErrorMessage name=\"email\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\r\n                                                <ErrorMessage name=\"password\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage>\r\n                                                <ErrorMessage name=\"businessUEN\" component=\"div\" className=\"alert alert-warning\"></ErrorMessage> */}\r\n                                                        <fieldset className=\"form-group\">\r\n                                                            <label>Name</label>\r\n                                                            <Field className=\"form-control\" type=\"text\" placeholder=\"Enter name\" name=\"name\"></Field>\r\n                                                        </fieldset>\r\n                                                        <fieldset className=\"form-group\">\r\n                                                            <label>Email Address</label>\r\n                                                            <Field className=\"form-control\" type=\"email\" placeholder=\"Enter email\" name=\"email\"></Field>\r\n                                                        </fieldset>\r\n                                                        <fieldset className=\"form-group\">\r\n                                                            <label>Password</label>\r\n                                                            <Field className=\"form-control\" type=\"password\" placeholder=\"Enter password\" name=\"password\"></Field>\r\n                                                        </fieldset>\r\n                                                        <fieldset className=\"form-group\">\r\n                                                            <label>Your Business UEN</label>\r\n                                                            <Field className=\"form-control\" type=\"text\" placeholder=\"Enter Business UEN\" name=\"businessUEN\"></Field>\r\n                                                        </fieldset>\r\n                                                        <Button variant=\"outline-dark\" type=\"submit\" >Sign Up</Button>\r\n                                                        <Link style={{ padding: '10px' }} className=\"new user text-left\" to=\"/signupbusiness\"><Button variant=\"outline-dark\">Register as Owner</Button></Link>\r\n                                                        <p className=\"forgot-password text-left\">Already registered? <a href=\"/login\">Sign In</a></p>\r\n\r\n                                                    </Form>\r\n                                                )\r\n                                            }\r\n                                        </Formik>\r\n\r\n                                    </div>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SignupComponent;\r\n\r\n// ==================== UTILITY FUNCTIONS ====================\r\n\r\nfunction throwWarning(warningMessage) {\r\n    store.addNotification({\r\n        title: \"Warning!\",\r\n        message: warningMessage,\r\n        type: \"warning\",\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        dismiss: {\r\n            duration: 50000000,\r\n        }\r\n    });\r\n}\r\n\r\nfunction throwError(errorMessage) {\r\n    store.addNotification({\r\n        title: \"Error!\",\r\n        message: errorMessage,\r\n        type: \"danger\",\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        dismiss: {\r\n            duration: 5000000,\r\n        }\r\n    });\r\n}\r\n\r\nfunction showSuccess() {\r\n    store.addNotification({\r\n        title: \"Success!\",\r\n        message: \"You have signed up successfully! Please login.\",\r\n        type: \"success\",\r\n        insert: \"top\",\r\n        container: \"top-right\",\r\n        animationIn: [\"animate__animated\", \"animate__fadeIn\"],\r\n        animationOut: [\"animate__animated\", \"animate__fadeOut\"],\r\n        dismiss: {\r\n            duration: 10000000,\r\n        }\r\n    });\r\n}","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ProfileComponent.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ContactusComponent.jsx",["141"],"\r\nimport Card from 'react-bootstrap/Card';\r\nimport React, { Component } from 'react';\r\nimport Image from 'react-bootstrap/Image';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Placeholder from 'react-bootstrap/Placeholder';\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport {FiSend } from \"@react-icons/all-files/fi/FiSend\";\r\n\r\n\r\n\r\nclass ContactusComponent extends Component {\r\n    render() {\r\n        return (\r\n            <>\r\n            <div>\r\n                <Container>\r\n                    <Placeholder xs={12} bg=\"transparent\"/>\r\n                    <h1  className=\"text-dark cg1p-header\" >Contact Us</h1>\r\n                    <Placeholder xs={12} bg=\"transparent\"  />\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                    <Image src=\"https://media.istockphoto.com/photos/young-bearded-businessman-sitting-on-desk-and-posing-picture-id1322913815?k=20&m=1322913815&s=612x612&w=0&h=vDJxUO2lrV1YtG2VoM9IGcZnPJNJ4cvGzAOhaY76A2Y=\" roundedCircle />\r\n                    <Form className=\"text-dark\">\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\r\n                            <Form.Label>Email address</Form.Label>\r\n                            <Form.Control type=\"email\" placeholder=\"name@example.com\" />\r\n                        </Form.Group>\r\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\">\r\n                            <Form.Label>Description</Form.Label>\r\n                            <Form.Control as=\"textarea\" rows={3} />\r\n                        </Form.Group>\r\n                        <div className=\"d-grid gap-2\">\r\n                        <Button variant=\"primary\" type=\"submit\" size=\"lg\"><FiSend /></Button>\r\n                        </div>\r\n                        </Form>\r\n                </Container>\r\n                <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ContactusComponent;","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\AboutusComponent.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\OwnerSignupComponent.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\HomeComponent.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\WelcomeComponent.jsx",["142","143","144","145","146","147","148","149"],"import React, { Component } from 'react'\r\n// import routing features\r\nimport HelloWorldService from '../api/HelloWorldService'\r\nimport UserDataService from '../api/UserDataService'\r\nimport TodoDataService from '../api/TodoDataService'\r\n\r\nimport Card from 'react-bootstrap/Card';\r\nimport Placeholder from 'react-bootstrap/Placeholder';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Offcanvas from 'react-bootstrap/Offcanvas'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Tabs from 'react-bootstrap/Tabs'\r\nimport Tab from 'react-bootstrap/Tab'\r\n\r\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\r\nimport moment from 'moment'\r\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\r\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\r\nimport { SESSION_USER_ID, SESSION_USER_NAME } from '../Constants';\r\n\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\nimport Switch from '@mui/material/Switch';\r\n\r\n\r\n\r\n// Welcome landing page, that links to the Todos page.\r\nclass WelcomeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.retrieveWelcomeMessage = this.retrieveWelcomeMessage.bind(this);\r\n        this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n        this.retrieveHealthStatus = this.retrieveHealthStatus.bind(this);\r\n        this.toggleCovidStatus = this.toggleCovidStatus.bind(this);\r\n        this.toggleShnStatus = this.toggleShnStatus.bind(this);\r\n\r\n        this.refreshTodos = this.refreshTodos.bind(this)\r\n        this.addTodoClicked = this.addTodoClicked.bind(this)\r\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\r\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\r\n\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n\r\n        this.state = {\r\n            userId: sessionStorage.getItem(SESSION_USER_ID),\r\n            userName: sessionStorage.getItem(SESSION_USER_NAME),\r\n            welcomeMessage: '',\r\n            errorMessage: '',\r\n            shnStatus: false,\r\n            covidStatus: false,\r\n            showSidebar: false,\r\n            todos: [],\r\n            message: null\r\n\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.retrieveHealthStatus()\r\n        this.refreshTodos()\r\n        this.setState({ showSidebar: false });\r\n\r\n    }\r\n\r\n    handleClose() { //sidebar\r\n        this.setState({ showSidebar: false });\r\n    }\r\n\r\n    handleShow() { //sidebar\r\n        this.setState({ showSidebar: true });\r\n        this.refreshTodos();\r\n    }\r\n\r\n    // same as above, but for subsequent refreshes\r\n    refreshTodos() {\r\n        TodoDataService.retrieveAssignedTodos(this.state.userId)\r\n            .then(response => this.setState({ todos: response.data }))\r\n    }\r\n\r\n    // handler for when add todo is clicked\r\n    addTodoClicked() {\r\n        this.props.history.push(`/todos/-1`)\r\n    }\r\n\r\n    // handler for when update todo is clicked\r\n    updateTodoClicked(todoId) {\r\n        this.props.history.push(`/todos/${todoId}`)\r\n    }\r\n\r\n    // handler for when delete todo is clicked\r\n    deleteTodoClicked(todoId) {\r\n        TodoDataService.deleteTodo(this.state.userId, todoId)\r\n            .then(() => {\r\n                this.setState({ message: `Delete of todo ${todoId} was successful` })\r\n                this.refreshTodos()\r\n            })\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return [\r\n            'white',\r\n        ].map((variant, idx) => (\r\n            <div style={{\r\n\r\n            }}>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <h1 className=\"cg1p-header\">Welcome Home, {this.state.userName}</h1>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <Card>\r\n                                <Container>\r\n                                    <Button variant=\"outline-dark\" size=\"lg\" onClick={this.handleShow}>\r\n                                        Checklist\r\n                                    </Button>\r\n                                    <Offcanvas show={this.state.showSidebar} onHide={this.handleClose}>\r\n                                        <Offcanvas.Header closeButton>\r\n                                            <Offcanvas.Title className=\"text-dark\">Checklist</Offcanvas.Title>\r\n                                        </Offcanvas.Header>\r\n                                        <Offcanvas.Body className=\"text-dark\">\r\n                                            <Row>\r\n                                                <Col>\r\n\r\n                                                    <Card className=\"text-dark\">\r\n                                                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                                                        <Card.Body>\r\n                                                            <Card.Text>\r\n                                                                <iframe src=\"https://free.timeanddate.com/clock/i81r8hlp/n236/tlsg/fn6/fs20/fcfff/tc000/ftb/bacfff/pa8/tt0/tw1/th2/ta1/tb4\" frameborder=\"0\" width=\"333\" height=\"68\"></iframe>\r\n                                                            </Card.Text>\r\n                                                        </Card.Body>\r\n                                                    </Card>\r\n                                                    <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                                                        <table className=\"table text-dark\">\r\n                                                            <thead>\r\n                                                                <tr>\r\n                                                                    <th>Task</th>\r\n                                                                    <th>Date Created</th>\r\n                                                                    <th>Target Date</th>\r\n                                                                </tr>\r\n                                                            </thead>\r\n                                                            <tbody>\r\n                                                                {\r\n                                                                    // script that for each todo, map it and display id, desc, done, createdDate, and buttons\r\n                                                                    this.state.todos.map(\r\n                                                                        todo =>\r\n                                                                            <tr key={todo.id}>\r\n                                                                                <td>{todo.description}</td>\r\n                                                                                <td>{moment(todo.createdDate).format('YYYY-MM-DD')}</td>\r\n                                                                                <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                                                            </tr>\r\n                                                                    )\r\n                                                                }\r\n                                                            </tbody>\r\n                                                        </table>\r\n                                                    </div>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </Offcanvas.Body>\r\n                                    </Offcanvas>\r\n                                </Container>\r\n                            </Card>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                            <Card>\r\n                                <iframe width=\"300px\" height=\"350px\" src=\"https://data.gov.sg/dataset/covid-19-case-numbers/resource/99334c54-479f-472d-a6f5-fe38d2f9b1aa/view/c5b1cfad-f0c8-43e8-9bce-ea541923e9e7\" frameBorder=\"0\"> </iframe>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col xs={5}>\r\n                            <Card ><h2 className=\"cg1p-header\">Announcements</h2></Card>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                            <Tabs defaultActiveKey=\"profile\" id=\"uncontrolled-tab-example\" className=\"mb-3\">\r\n                                <Tab eventKey=\"Dining\" title=\"Dining\">\r\n                                    <Card className=\"text-dark\">\r\n                                        <Card.Text>\r\n                                            First, we will allow up to five fully vaccinated persons\r\n                                            from the same household to dine-in together at food and beverage\r\n                                            (F&B) establishments that are able to administer comprehensive VDS checks.\r\n                                        </Card.Text>\r\n                                    </Card>\r\n                                </Tab>\r\n                                <Tab eventKey=\"vaccine\" title=\"Vaccine\">\r\n                                    <Card className=\"text-dark\">\r\n                                        <Card.Text>\r\n                                            Progress in vaccination and boosters has contributed immensely to the tempering of COVID-19 cases.\r\n                                            However, those who are not fully vaccinated continue to disproportionately\r\n                                            make up the bulk of severe and ICU cases, and impose a strain on our healthcare system\r\n                                            . There remains a need to protect them. Vaccination-Differentiated Safe Management Measures\r\n                                            (VDS) will therefore remain a crucial prong of our re-opening strategy in the coming weeks.\r\n                                        </Card.Text>\r\n                                    </Card>\r\n                                </Tab>\r\n                                <Tab eventKey=\"travel\" title=\"Travel\">\r\n                                    <Card className=\"text-dark\">\r\n                                        <Card.Text>\r\n                                            Finally, our experience to date with the Vaccinated Travel Lanes (VTLs)\r\n                                            has shown that we can open up air travel in a safe way.\r\n                                            We will further simplify travel protocols to safely and seamlessly\r\n                                            reconnect with the rest of the world.\r\n                                        </Card.Text>\r\n                                    </Card>\r\n                                </Tab>\r\n                                <Tab eventKey=\"healthcare\" title=\"Healthcare\">\r\n                                    <Card className=\"text-dark\">\r\n                                        <Card.Text>\r\n                                            Daily case numbers have stabilised for around three weeks now.\r\n                                            While cases have remained at more than 3,000 a day on average,\r\n                                            close to 99% of cases continue to have mild or no symptoms and\r\n                                            the vast majority are able to recover well at home.\r\n                                            The proportion of patients who require oxygen supplementation\r\n                                            has held steady at 0.8% of our total cases, and those who require\r\n                                            ICU care at 0.3%, in the past 28 days.\r\n                                            The number of cases in the ICU remains high but stable\r\n                                            at around 140 cases, who occupy 70% of our current ICU bed capacity.\r\n                                            We have been actively expanding the capacity of COVID-19 Treatment Facilities\r\n                                            (CTFs) and Community Isolation Facilities (CIFs) over the past few weeks to take in\r\n                                            COVID-19 patients who do not require acute care in hospitals.\r\n                                        </Card.Text>\r\n                                    </Card>\r\n                                </Tab>\r\n\r\n                                <Tab eventKey=\"Work\" title=\"Work\">\r\n                                    <Card className=\"text-dark\">\r\n                                        <Card.Text>\r\n                                            From 1 January 2022, employers must ensure that unvaccinated\r\n                                            employees do not return to the workplace.\r\n                                            1 These individuals are at a higher risk of\r\n                                            falling seriously ill from COVID-19 infection and\r\n                                            putting a strain on our healthcare capacity.\r\n                                            Please refer to the Updated Advisory on COVID-19\r\n                                            Vaccination at the Workplace for more details on\r\n                                            work arrangements for unvaccinated employees.\r\n                                        </Card.Text>\r\n                                    </Card>\r\n                                </Tab>\r\n                            </Tabs>\r\n\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n\r\n                            <Card className=\"card\" bg={variant.toLowerCase()} >\r\n                                <Card.Body>\r\n                                    <Card.Title className=\"text-danger\">Employee Management</Card.Title>\r\n                                    <Card.Text className=\"text-dark\">\r\n                                        employee 123 has updated her status\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n\r\n                            <Card className=\"card\" bg={variant.toLowerCase()} >\r\n                                <Card.Body>\r\n                                    <Card.Title className=\"text-warning\">Todos</Card.Title>\r\n                                    <Card.Text className=\"text-dark\">\r\n                                        you have 5 undone task!\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n\r\n                        </Col>\r\n                        <Col>\r\n                            <Card bg={variant.toLowerCase()} className=\"text-center\">\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        <h2 className=\"cg1p-header\">\r\n                                            My COVID Status</h2>\r\n                                    </Card.Title>\r\n                                    <Card.Text>\r\n                                        <h5 className=\"text-dark\">\r\n                                            <Card.Header>SHN Status: {this.state.shnStatus ? 'Yes' : 'No'}\r\n\r\n                                            </Card.Header>\r\n                                            <FormControlLabel onClick={this.toggleShnStatus} control={<Switch color=\"warning\" />} label=\"\"\r\n                                            />\r\n\r\n                                        </h5>\r\n                                        <h5 className=\"text-dark\">\r\n                                            <Card.Header>COVID Positive: {this.state.covidStatus ? 'Yes' : 'No'}</Card.Header>\r\n                                            <FormControlLabel onClick={this.toggleCovidStatus} control={<Switch color=\"warning\" />} label=\"\" />\r\n                                        </h5>\r\n\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <Card bg={variant.toLowerCase()} className=\"text-center\">\r\n                                <Card.Body>\r\n                                    <Card.Title>\r\n                                        <h2 className=\"container text-dark\">\r\n                                            Get Inspired</h2>\r\n                                        <div className=\"d-grid gap-2\">\r\n                                            <Button size=\"lg\" onClick={this.retrieveWelcomeMessage} variant=\"outline-dark\" >Here</Button>\r\n                                        </div>\r\n                                    </Card.Title>\r\n                                    <Card.Text>\r\n                                        <h4 className=\"container text-dark\">\r\n                                            {this.state.welcomeMessage}\r\n                                        </h4>\r\n                                        <div className=\"container text-dark\">\r\n                                            {this.state.errorMessage}\r\n                                        </div>\r\n                                    </Card.Text>\r\n                                </Card.Body>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n\r\n\r\n\r\n                    <Row>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                        <Card className=\"text-dark\">\r\n                            <h2>Latest Covid-19 Cases updates</h2>\r\n                        </Card>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                        <Card>\r\n                            <iframe className=\"text-light\" height=\"600px\" width=\"100%;\" src=\"https://infographics.channelnewsasia.com/covid-19/sgcovid19chart.html?type=embed&amp;channel=cna\"></iframe>\r\n                        </Card>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                        <Card>\r\n                            <iframe width=\"100%\" height=\"600\" scrolling=\"no\" src=\"https://infographics.channelnewsasia.com/covid-19/asia-covid-19-daily-cases.html?type=embed&amp;channel=cna\" ></iframe>\r\n                            {/* <iframe src=\"https://public.domo.com/cards/bWxVg\" width=\"50%\" height=\"600\" marginheight=\"0\" marginwidth=\"0\" frameborder=\"0\"></iframe> */}\r\n                        </Card>\r\n                    </Row>\r\n\r\n                    <Row>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                        <Card className=\"text-dark\">\r\n                            <h2>Plan your next business Trip</h2>\r\n\r\n                        </Card>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                        <iframe className=\"text-light\" height=\"800px\" width=\"100%;\" scrolling=\"no\" src=\"https://www.farecompare.com/maps/SIN-\"></iframe>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                    </Row>\r\n                </Container>\r\n            </div>\r\n\r\n\r\n        ))\r\n    }\r\n\r\n    retrieveWelcomeMessage() {\r\n        HelloWorldService.executeHelloWorldService(this.state.userName)\r\n            .then(response => this.handleSuccessfulResponse(response))\r\n            .catch(error => this.handleError(error));\r\n    }\r\n\r\n    retrieveHealthStatus() {\r\n        UserDataService.retrieveUser(this.state.userId).then(response => {\r\n            this.setState({\r\n                shnStatus: response.data.shnStatus,\r\n                covidStatus: response.data.covidStatus\r\n            })\r\n        })\r\n    }\r\n\r\n    toggleCovidStatus() {\r\n        UserDataService.retrieveUser(this.state.userId).then(response => {\r\n            let user = {\r\n                id: response.data.id,\r\n                email: response.data.email,\r\n                name: response.data.name,\r\n                password: response.data.password,\r\n                shnStatus: response.data.shnStatus,\r\n                covidStatus: !(response.data.covidStatus),\r\n                authority: response.data.authority,\r\n                business: response.data.business\r\n            }\r\n            UserDataService.updateUser(user);\r\n        })\r\n        this.setState({ covidStatus: !this.state.covidStatus })\r\n    }\r\n\r\n    toggleShnStatus() {\r\n        UserDataService.retrieveUser(this.state.userId).then(response => {\r\n            let user = {\r\n                id: response.data.id,\r\n                email: response.data.email,\r\n                name: response.data.name,\r\n                password: response.data.password,\r\n                shnStatus: !(response.data.shnStatus),\r\n                covidStatus: response.data.covidStatus,\r\n                authority: response.data.authority,\r\n                business: response.data.business\r\n            }\r\n            UserDataService.updateUser(user);\r\n        })\r\n        this.setState({ shnStatus: !this.state.shnStatus })\r\n    }\r\n\r\n    handleSuccessfulResponse(response) {\r\n        this.setState({ welcomeMessage: response.data.message })\r\n    }\r\n\r\n    handleError(error) {\r\n        console.log(error.response)\r\n        let errorMessage = '';\r\n        if (error.message) {\r\n            errorMessage += error.message\r\n        }\r\n        if (error.response && error.response.data) {\r\n            errorMessage += error.response.data.message\r\n        }\r\n\r\n        this.setState({ errorMessage: errorMessage })\r\n    }\r\n\r\n}\r\n\r\nexport default WelcomeComponent;","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\HeaderComponent.jsx",["150","151"],"import React, { Component } from 'react'\r\n// import routing features\r\nimport { Link } from 'react-router-dom'\r\n// auth service\r\nimport AuthenticationService from '../api/AuthenticationService.js'\r\n// import withRouter to wrap - auto update header based on auth\r\nimport { withRouter } from 'react-router';\r\n\r\nimport NavDropdown from 'react-bootstrap/NavDropdown';\r\n\r\n\r\nimport Offcanvas from 'react-bootstrap/Offcanvas'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Placeholder from 'react-bootstrap/Placeholder'\r\n\r\nimport { AiOutlineMenu } from \"@react-icons/all-files/ai/AiOutlineMenu\";\r\n\r\n\r\n// Header with navigation features as a navbar. Shows different things based on whether user is logged in.\r\nclass HeaderComponent extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        this.state = {\r\n            showSidebar: false,\r\n            showModal: false\r\n        }\r\n    }\r\n\r\n    handleClose() { //sidebar\r\n        this.setState({ showSidebar: false });\r\n    }\r\n\r\n    handleShow() { //sidebar\r\n        this.setState({ showSidebar: true });\r\n    }\r\n\r\n    render() {\r\n        const isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        console.log('isloggedin triggered from header')\r\n        return (\r\n            <header>\r\n                <Navbar bg=\"dark\" expand={false} >\r\n                    <Container fluid>\r\n                        <Navbar.Brand className=\"cg1p-logo\" href=\"/Welcome\"><h4>Buddy-19</h4></Navbar.Brand>\r\n                        <Button variant=\"light\" onClick={this.handleShow}><AiOutlineMenu /></Button>\r\n                        <Offcanvas show={this.state.showSidebar} onHide={this.handleClose}>\r\n                            <Offcanvas.Header closeButton>\r\n                                <Offcanvas.Title className=\"text-dark\">Menu</Offcanvas.Title>\r\n                            </Offcanvas.Header>\r\n                            <Offcanvas.Body className=\"text-dark\">\r\n                                <Row>\r\n                                    <Col>\r\n                                    <iframe src=\"https://free.timeanddate.com/clock/i81r8hlp/n236/tlsg/fn6/fs20/fcfff/tc000/ftb/bacfff/pa8/tt0/tw1/th2/ta1/tb4\" frameborder=\"0\" width=\"368\" height=\"68\"></iframe>\r\n                                        <Card className=\"text-dark\">\r\n                                            {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                                            <Card.Text className=\"text-dark\" >\r\n                                                <h4>{isUserLoggedIn && <Link className=\"nav-link\" to=\"/welcome\">Home</Link>}\r\n                                                {isUserLoggedIn && <Link className=\"nav-link\" to=\"/emp\">Employee Updates</Link>}\r\n                                                {isUserLoggedIn && <Link className=\"nav-link\" to=\"/todos\">Employee Tasks</Link>}\r\n                                                {!isUserLoggedIn && <Link className=\"nav-link\" to=\"/news\">News</Link>}\r\n                                                {isUserLoggedIn && <Link className=\"nav-link\" to=\"/news\">News</Link>}\r\n                                                {!isUserLoggedIn && <Link className=\"nav-link\" to=\"/login\">Login</Link>}\r\n                                                {!isUserLoggedIn && <Link className=\"nav-link\" to=\"/signup\">SignUp</Link>}\r\n                                                {!isUserLoggedIn && <Link className=\"nav-link\" to=\"/faq\">FAQ</Link>}\r\n                                                {isUserLoggedIn && <Link className=\"nav-link\" to=\"/faq\">FAQ</Link>}\r\n                                                {!isUserLoggedIn && <Link className=\"nav-link\" to=\"/aboutus\">About Us</Link>}\r\n                                                {isUserLoggedIn && <Link className=\"nav-link\" to=\"/aboutus\">About Us</Link>}\r\n                                                {!isUserLoggedIn && <Link className=\"nav-link\" to=\"/contactus\">Contact Us</Link>}\r\n                                                {isUserLoggedIn && <Link className=\"nav-link\" to=\"/contactus\">Contact Us</Link>}\r\n                                                {isUserLoggedIn && <Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link>}\r\n                                                </h4>\r\n                                            </Card.Text>\r\n                                        </Card>\r\n                                        <Placeholder xs={12} bg=\"white\" className=\"bg-black\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Offcanvas.Body>\r\n                        </Offcanvas>\r\n                    </Container>\r\n                </Navbar>\r\n            </header>\r\n            // <header>\r\n\r\n\r\n            //     <nav className=\"navbar navbar-expand-md navbar-dark bg-dark\">\r\n            //         <h4><a href=\"/\" className=\"navbar-brand\">Buddy-19</a></h4>\r\n            //         <ul className=\"navbar-nav\">\r\n            //             {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/welcome/admin\">Home</Link></li>}\r\n            //             {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/todos\">Dashboard</Link></li>}\r\n            //             {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/news\">News</Link></li>}\r\n            //             {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/news\">News</Link></li>}\r\n\r\n            //             <NavDropdown\r\n            //                 id=\"nav-dropdown-dark-example\"\r\n            //                 title=\"Questions\"\r\n            //                 menuVariant=\"dark\"\r\n            //                 >\r\n            //                 {!isUserLoggedIn && <NavDropdown.Item ><Link className=\"nav-link\" to=\"/faq\">FAQ</Link></NavDropdown.Item>}\r\n            //                 {isUserLoggedIn && <NavDropdown.Item ><Link className=\"nav-link\" to=\"/faq\">FAQ</Link></NavDropdown.Item>}\r\n            //                 {!isUserLoggedIn && <NavDropdown.Item ><Link className=\"nav-link\" to=\"/aboutus\">About Us</Link></NavDropdown.Item>}\r\n            //                 {isUserLoggedIn && <NavDropdown.Item ><Link className=\"nav-link\" to=\"/aboutus\">About Us</Link></NavDropdown.Item>}\r\n            //                 {!isUserLoggedIn && <NavDropdown.Item ><Link className=\"nav-link\" to=\"/contactus\">Contact Us</Link></NavDropdown.Item>}\r\n            //                 {isUserLoggedIn && <NavDropdown.Item ><Link className=\"nav-link\" to=\"/contactus\">Contact Us</Link></NavDropdown.Item>}\r\n\r\n            //                 </NavDropdown>\r\n\r\n\r\n            //         </ul>\r\n            //         <ul className=\"navbar-nav navbar-collapse justify-content-end\">\r\n            //             {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/mylist\">mylist</Link></li>}\r\n            //             {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/profile\">Profile</Link></li>}\r\n            //             {!isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/login\">Login</Link></li>}\r\n            //             {isUserLoggedIn && <li><Link className=\"nav-link\" to=\"/logout\" onClick={AuthenticationService.logout}>Logout</Link></li>}\r\n            //             {/* link for profile, news not implemented */}\r\n\r\n            //         </ul>\r\n            //     </nav>\r\n            // </header>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(HeaderComponent);","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\TodoComponent.jsx",["152","153","154","155"],"import React, { Component } from 'react'\r\nimport moment from 'moment'\r\nimport { Form, Formik, Field, ErrorMessage } from 'formik'\r\nimport TodoDataService from '../api/TodoDataService.js'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Placeholder from 'react-bootstrap/Placeholder'\r\n\r\nimport Card from 'react-bootstrap/Card'\r\n\r\nimport { SESSION_USER_BUSINESS, SESSION_USER_ID } from '../Constants.js'\r\nimport UserDataService from '../api/UserDataService.js'\r\nimport Multiselect from 'multiselect-react-dropdown'\r\nimport Switch from '@mui/material/Switch';\r\nimport FormControlLabel from '@mui/material/FormControlLabel';\r\n\r\n\r\n// Page to update or add a specific todo\r\nclass TodoComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        // State of the page - contains id, desc, and date for a specific todo.\r\n        this.state = {\r\n            userId: sessionStorage.getItem(SESSION_USER_ID),\r\n            id: this.props.match.params.id,\r\n            description: '',\r\n            targetDate: moment(new Date()).format('YYYY-MM-DD'),\r\n            listItems: [],\r\n            selectedValues: [],\r\n            employees: []\r\n\r\n        }\r\n\r\n        this.onSelect = this.onSelect.bind(this)\r\n        this.onRemove = this.onRemove.bind(this)\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    // on load of page\r\n    componentDidMount() {\r\n\r\n        UserDataService.retrieveUsersByBusiness(sessionStorage.getItem(SESSION_USER_BUSINESS))\r\n            .then(response => {\r\n                this.setState({\r\n                    listItems: response.data.map(employee => ({\r\n                        name: employee.name + '  (' + employee.email + ')',\r\n                        value: employee.id\r\n                    }))\r\n                })\r\n            })\r\n\r\n        // if -1 (create), do not try to load todo as it is empty\r\n        if (this.state.id === \"-1\") {\r\n            return\r\n        }\r\n\r\n        TodoDataService.retrieveTodo(this.state.userId, this.state.id)\r\n            .then(response => this.setState({\r\n                description: response.data.description,\r\n                targetDate: moment(response.data.targetDate).format('YYYY-MM-DD'),\r\n                selectedValues: response.data.createdFor.map(employee => ({\r\n                    name: employee.name + '  (' + employee.email + ')',\r\n                    value: employee.id\r\n                })),\r\n                employees: response.data.createdFor.map(employee =>\r\n                    employee.id\r\n                )\r\n            }))\r\n\r\n        console.log(this.state.employees)\r\n    }\r\n\r\n    // for employee dropdown\r\n    onSelect(selectedList, selectedItem) {\r\n        this.state.employees.push(selectedItem.value)\r\n        console.log(this.state.employees)\r\n    }\r\n\r\n    // for employee dropdown\r\n    onRemove(selectedList, removedItem) {\r\n        const index = this.state.employees.indexOf(removedItem.value)\r\n        this.state.employees.splice(index, 1)\r\n        console.log(this.state.employees)\r\n    }\r\n\r\n    // on Formik Submit\r\n    onSubmit(values) {\r\n        let todo = {\r\n            description: values.description,\r\n            targetDate: values.targetDate,\r\n            createdForIds: this.state.employees\r\n        }\r\n\r\n        console.log(todo)\r\n\r\n        // if state (todo id) is -1, means todo does not exist yet, means create todo\r\n        if (this.state.id == -1) {\r\n            TodoDataService.createTodo(this.state.userId, todo)\r\n                .then(() => this.props.history.push(\"/todos\"))\r\n            // else state (todo id) is not -1, means todo exists, means update todo\r\n        } else {\r\n            TodoDataService.updateTodo(this.state.userId, this.state.id, todo)\r\n                .then(() => this.props.history.push(\"/todos\"))\r\n        }\r\n    }\r\n\r\n    // on Formik Validate call\r\n    // if errors populated, will not call onSubmit above\r\n    validate(values) {\r\n        let errors = {}\r\n\r\n        if (!values.description) {\r\n            errors.description = \"Enter a description\"\r\n        } else if (values.description.length < 5) {\r\n            errors.description = \"Enter at least 5 characters for description\"\r\n        }\r\n        if (!moment(values.targetDate).isValid()) {\r\n            errors.targetDate = 'Enter a valid Target Date'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        // rely on modern JS destructuring, can assign/retrieve together\r\n        let { description, targetDate } = this.state\r\n\r\n        return (\r\n            <div>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col>\r\n                    <Container>\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                        <Row>\r\n                            <h1 className=\"text-dark\">Todo</h1>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <div className=\"container text-dark \">\r\n                                <Formik\r\n                                    initialValues={{ description, targetDate }}\r\n                                    onSubmit={this.onSubmit}\r\n                                    validateOnChange={false}\r\n                                    validateOnBlur={false}\r\n                                    validate={this.validate}\r\n                                    enableReinitialize={true}\r\n                                >\r\n                                    {\r\n                                        (props) => (\r\n                                            <h5>\r\n                                            <Form>\r\n                                                <ErrorMessage name=\"description\" component=\"div\" className=\"alert alert-warning \"></ErrorMessage>\r\n                                                <fieldset className=\"form-group\">\r\n                                                    <label >Description</label>\r\n                                                    <Field className=\"form-control\" type=\"text\" name=\"description\"></Field>\r\n                                                </fieldset>\r\n                                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                                <fieldset className=\"form-group\">\r\n                                                    <label >Assign To</label>\r\n                                                    <Multiselect\r\n                                                        options={this.state.listItems}\r\n                                                        selectedValues={this.state.selectedValues}\r\n                                                        onSelect={this.onSelect}\r\n                                                        onRemove={this.onRemove}\r\n                                                        displayValue=\"name\"\r\n                                                        showCheckbox\r\n                                                        closeOnSelect={false}\r\n                                                        placeholder=\"Select employees\"\r\n                                                        hidePlaceholder\r\n                                                        avoidHighlightFirstOption\r\n                                                    />\r\n                                                </fieldset>\r\n                                                \r\n                                                <fieldset className=\"form-group\">\r\n                                                    <label>Target Date</label>\r\n                                                    <Field className=\"form-control\" type=\"date\" name=\"targetDate\" />\r\n                                                </fieldset>\r\n\r\n                                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                                <button className=\"btn btn-success\" type=\"submit\" >Save</button>\r\n                                            </Form>\r\n                                            </h5>\r\n                                        )\r\n                                    }\r\n                                </Formik>\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n                                <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                            </div>\r\n                        </Row>\r\n                    </Container>\r\n                </Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n                <Col></Col>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoComponent","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\AuthenticatedRoute.jsx",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\GeneralFaq.jsx",["156","157"],"import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Placeholder from 'react-bootstrap/Placeholder'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport FaqDataService from '../api/FaqDataService';\r\n\r\n\r\n\r\n\r\n// Footer\r\n\r\nclass GeneralFaq extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            faq: [],\r\n            faqDisplay: [],\r\n            isEmpty: false,\r\n            tagsSelected: {},\r\n            options: []\r\n        }\r\n    }\r\n\r\n    getFAQ() {\r\n        FaqDataService.retrieveAllFAQ()\r\n            .then(\r\n                response => {\r\n                    this.state.isEmpty = response.data.length === 0;\r\n                    this.setState({ faq: response.data })\r\n                    // this.setState({ faqDisplay: response.data })\r\n                    //             console.log(\"retrieval made\");\r\n                    // console.log(response);\r\n                    //             this.generateTaglist();\r\n                    // console.log(this.state.faq[0]);\r\n\r\n                    this.createUserDisplay();\r\n                }\r\n            )\r\n    }\r\n\r\n    createUserDisplay() {\r\n        //get the logged in user's lamnguage and industry\r\n        let userIndustry = \"F&B\"; //todo: set based on the logged in user\r\n        let userLanguage = \"English\";\r\n        let output = [];\r\n        let idx = 0;\r\n        console.log(this.state.faq);\r\n        //traverse through the faq list to find matches\r\n        for (var faqCount in this.state.faq) {\r\n            let faqItem = this.state.faq[faqCount];\r\n            //if there is a match, add it to faqDisplay\r\n            // console.log(faqItem.language);\r\n            // console.log(faqItem.industry)\r\n            if (faqItem.language === userLanguage && faqItem.industry === userIndustry) {\r\n                output[idx] = faqItem;\r\n                idx++;\r\n            }\r\n        }\r\n        //set the final list\r\n        console.log(output);\r\n        this.setState({ faqDisplay: output })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFAQ()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <h1 className=\"cg1p-header\">FAQ {this.state.userName}</h1>\r\n                {Array.from(this.state.faqDisplay, (_, idx) => (\r\n                    <Col>\r\n                        <Card bg={'dark'}>\r\n                            <Card.Img variant=\"top\" src={this.state.faqDisplay[idx].url} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    <Card.Link href={this.state.faqDisplay[idx].url}>\r\n                                        {this.state.faqDisplay[idx].industry}\r\n                                    </Card.Link>\r\n                                </Card.Title>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={5}>\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"mr-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button src=\"\" variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                {/* the questions */}\r\n                <Container>\r\n                    <Row>\r\n\r\n                        <Accordion>\r\n                            <Accordion.Item eventKey=\"0\">\r\n                                <Accordion.Header>Do i need to declare my onsite manpower details?</Accordion.Header>\r\n                                <Accordion.Body className=\"text-black bg-white\">\r\n                                    <Row>\r\n                                        <Col>You are required to declare your onsite manpower if you received an email\r\n                                            notifying you to submit your onsite manpower details, or if there is a\r\n                                            “MPSubmit” reference number in your company dashboard after you have logged into GoBusiness.\r\n                                            For companies in the Construction, Process and, Marine and Offshore Sectors\r\n                                            Companies in the above sectors will not receive an email notification to submit manpower details but should still continue\r\n                                            to submit their manpower details for the reference numbers they see in the system that are available to them.\r\n                                            These companies are required to submit more information including NRIC/Fin numbers and premises/location\r\n                                            details in their manpower declaration. These companies will not have an “MPSubmit” reference number.</Col>\r\n                                        <Col> <Image src=\"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\" fluid /></Col>\r\n                                    </Row>\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n                            <Accordion.Item eventKey=\"1\">\r\n                                <Accordion.Header>Why is it necessary for me to declare my onsite manpower details?</Accordion.Header>\r\n                                <Accordion.Body className=\"text-black bg-white \" >\r\n                                    <Row>\r\n                                        <Col>You are required to declare your onsite manpower if you received an email\r\n                                            notifying you to submit your onsite manpower details, or if there is a\r\n                                            “MPSubmit” reference number in your company dashboard after you have logged into GoBusiness.\r\n                                            For companies in the Construction, Process and, Marine and Offshore Sectors\r\n                                            Companies in the above sectors will not receive an email notification to submit manpower details but should still continue\r\n                                            to submit their manpower details for the reference numbers they see in the system that are available to them.\r\n                                            These companies are required to submit more information including NRIC/Fin numbers and premises/location\r\n                                            details in their manpower declaration. These companies will not have an “MPSubmit” reference number.</Col>\r\n                                        <Col> <Image src=\"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\" fluid /></Col>\r\n                                    </Row>\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n                        </Accordion>\r\n\r\n\r\n                    </Row>\r\n                    <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GeneralFaq","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\NewsFeedComponent.jsx",["158","159","160","161","162","163"],"import React, { Component } from \"react\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Placeholder from \"react-bootstrap/Placeholder\";\r\nimport NewsDataService from '../api/NewsDataService';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport '../newsfeed.css';\r\n\r\nclass NewsFeedComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            news: [],\r\n            newsDisplay: [],\r\n            isEmpty: false,\r\n            tagsSelected: {},\r\n            options: []\r\n        }\r\n    }\r\n\r\n    //functions that run on load\r\n    componentDidMount() {\r\n        this.refreshNews();\r\n    }\r\n\r\n    //function to retrieve all news items from the database\r\n    refreshNews() {\r\n        //TODO implement retrieve by date\r\n        NewsDataService.retrieveAllNews()\r\n            .then(\r\n                response => {\r\n                    this.state.isEmpty = response.data.length === 0;\r\n                    this.setState({ news: response.data })\r\n                    this.setState({ newsDisplay: response.data })\r\n                    // console.log(\"retrieveall made\");\r\n                    console.log(response);\r\n                    this.generateTaglist();\r\n                }\r\n            )\r\n    }\r\n\r\n    //function to generate a list of tags based on news retrieved\r\n    //todo: reduce time complexity\r\n    generateTaglist() {\r\n        var tags = {}; //list of existing tags\r\n        var output = []; //output format: [{value:\"tag1\"},{value:\"tag2\"}]\r\n        var idx = 0;\r\n        for (var i in this.state.news) {\r\n            if (this.state.news[i].tagList.length != 0) { //iterate through news items and find ones with tags\r\n                var arr = this.state.news[i].tagList.split(\",\");\r\n                for (var s in arr) {\r\n                    if (!tags.hasOwnProperty(arr[s])) { //\r\n                        tags[arr[s]] = 0;\r\n                        // console.log(\"adding \" + arr[s]);\r\n                        output[idx] = { value: arr[s] };\r\n                        idx++;\r\n                    }\r\n                }\r\n                // console.log(this.state.news[i].tagList);\r\n\r\n            }\r\n        }\r\n        this.setState({ options: output })\r\n    }\r\n\r\n    //function to call the api to push news into database DEV ONLY\r\n    apiButtonClicked() {\r\n        NewsDataService.triggerNewsApi()\r\n            .then(\r\n                response => {\r\n                    console.log(\"triggered api, storing to database\");\r\n                    console.log(response);\r\n                }\r\n            )\r\n    }\r\n\r\n    //function to process the tags and display at the bottom of the card\r\n    processTags(tagString) {\r\n        if (tagString.length == 0) {\r\n            return \"No tags\";\r\n        } else {\r\n            return tagString.split(\",\").join(\", \");\r\n        }\r\n    }\r\n\r\n    //function to apply filters\r\n    showFilteredClicked() {\r\n        var output = [];\r\n        var idx = 0;\r\n        for (var tag in this.state.tagsSelected) {\r\n            if (this.state.tagsSelected[tag]) {\r\n                for (var i in this.state.news) { //iterate through news with index i\r\n                    if (this.state.news[i].tagList.includes(tag)) {\r\n                        output[idx] = this.state.news[i];\r\n                        idx++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (output.length == 0) {\r\n            this.setState({ newsDisplay: this.state.news });\r\n        } else {\r\n            this.setState({ newsDisplay: output });\r\n        }\r\n    }\r\n\r\n    //function for when a filter option is selected\r\n    onSelect = (selectedList, selectedItem) => { //note usage of arrow function here, necessary as this refers to multiselect, not newsfeed component see https://stackoverflow.com/questions/32317154/react-uncaught-typeerror-cannot-read-property-setstate-of-undefined?rq=1\r\n        var tag = selectedItem['value'];\r\n        this.state.tagsSelected[tag] = true;\r\n        console.log(JSON.stringify(this.state.tagsSelected));\r\n    }\r\n\r\n    //function for when a filter option is removed\r\n    onRemove = (selectedList, removedItem) => {\r\n        var tag = removedItem['value'];\r\n        this.state.tagsSelected[tag] = false;\r\n        console.log(JSON.stringify(this.state.tagsSelected));\r\n    }\r\n\r\n    //root component of NewsFeed that displays header, footer, and news cards\r\n    render() {\r\n\r\n        //==========Column for news feed to display filtered news==========//\r\n        let newsFeedColumn; //display empty message if there is no news in this.state\r\n        if (this.state.isEmpty) {\r\n            newsFeedColumn = <Card className=\"text-dark\">\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <h1>empty!</h1>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>;\r\n        } else {\r\n            //iterate through all this.state.news items and display them in card form\r\n            newsFeedColumn = <Row xs={1} md={1} className=\"g-4\">\r\n                {Array.from(this.state.newsDisplay, (_, idx) => (\r\n                    <Col>\r\n                        <Card bg={'dark'}>\r\n                            {/*<Card.Img variant=\"top\" src=\"holder.js/100px160\" />*/}\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    <Card.Link href={this.state.newsDisplay[idx].url}>\r\n                                        {this.state.newsDisplay[idx].title}\r\n                                    </Card.Link>\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    {this.state.newsDisplay[idx].description}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <small className=\"text-muted\">{this.processTags(this.state.newsDisplay[idx].tagList)}</small>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        }\r\n\r\n\r\n        //==========Dropdown component to select filter options==========//\r\n        //https://www.npmjs.com/package/multiselect-react-dropdown for more options //consider grouping?\r\n        let dropdown = <Multiselect\r\n            options={this.state.options} // Options to display in the dropdown\r\n            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n            onSelect={this.onSelect} // Function will trigger on select event\r\n            onRemove={this.onRemove} // Function will trigger on remove event\r\n            displayValue=\"value\" // Property name to display in the dropdown options\r\n        />\r\n\r\n\r\n        //==========Final render==========//\r\n        return (\r\n            <div>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <h1  className=\"text-dark cg1p-header\" >News</h1>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={9}  style={{padding: \"0\"}}>\r\n                            {dropdown}\r\n                        </Col>\r\n                        <Col style={{padding: \"0\"}}>\r\n                            <Button variant=\"outline-dark\" onClick={() => this.showFilteredClicked()}>Filter</Button>\r\n                        </Col>\r\n                        <Col style={{padding: \"0\"}}>\r\n                            <Button variant=\"outline-dark\" onClick={() => this.apiButtonClicked()}>Fetch News</Button>\r\n                            {/*//todo: make buttons toggle colour when toggled*/}\r\n                        </Col>\r\n                    </Row>\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                    <Row>\r\n                        {/*news column*/}\r\n                        {/*see newsFeedColumn definition for more information*/}\r\n                        {newsFeedColumn}\r\n\r\n                    </Row>\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                </Container>\r\n                <Placeholder xs={12} bg=\"transparent\" style={{paddingBottom: \"50vh\"}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewsFeedComponent;","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\BusinessDataService.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\AuthenticationService.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\IndustryDataService.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\UserDataService.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\ListTodosComponent.jsx",["164","165","166"],"import React, { Component } from 'react'\r\nimport TodoDataService from '../api/TodoDataService'\r\nimport moment from 'moment'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { SESSION_USER_ID } from '../Constants'\r\nimport Card from 'react-bootstrap/Card';\r\nimport { GrAdd } from \"@react-icons/all-files/gr/GrAdd\";\r\nimport { FaTrashAlt } from \"@react-icons/all-files/fa/FaTrashAlt\";\r\nimport { GrUpdate } from \"@react-icons/all-files/gr/GrUpdate\";\r\nimport Offcanvas from 'react-bootstrap/Offcanvas'\r\nimport Button from 'react-bootstrap/Button'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Placeholder from 'react-bootstrap/Placeholder'\r\n\r\n\r\n\r\n// Display a list of all Todos, where the user can manage, add, update, delete todos.\r\nclass ListTodosComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // State - contains the array of todos, as well as a message for deleteTodo successful\r\n        this.state = {\r\n            userId: sessionStorage.getItem(SESSION_USER_ID),\r\n            todos: [],\r\n            message: null,\r\n            showSidebar: false\r\n        }\r\n\r\n        this.refreshTodos = this.refreshTodos.bind(this)\r\n        this.addTodoClicked = this.addTodoClicked.bind(this)\r\n        this.updateTodoClicked = this.updateTodoClicked.bind(this)\r\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this)\r\n    }\r\n\r\n    // bring todos from axios get into current state for display, after initial render has been triggered.\r\n    componentDidMount() {\r\n        this.refreshTodos()\r\n        this.setState({ showSidebar: false });\r\n    }\r\n\r\n    // same as above, but for subsequent refreshes\r\n    refreshTodos() {\r\n        TodoDataService.retrieveCreatedTodos(this.state.userId)\r\n            .then(response => this.setState({ todos: response.data }))\r\n    }\r\n\r\n    // handler for when add todo is clicked\r\n    addTodoClicked() {\r\n        this.props.history.push(`/todos/-1`)\r\n    }\r\n\r\n    // handler for when update todo is clicked\r\n    updateTodoClicked(todoId) {\r\n        this.props.history.push(`/todos/${todoId}`)\r\n    }\r\n\r\n    // handler for when delete todo is clicked\r\n    deleteTodoClicked(todoId) {\r\n        TodoDataService.deleteTodo(this.state.userId, todoId)\r\n            .then(() => {\r\n                this.setState({ message: `Delete of todo ${todoId} was successful` })\r\n                this.refreshTodos()\r\n            })\r\n    }\r\n\r\n    // jsx render for entire table\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <Container>\r\n                <Placeholder xs={12} bg=\"transparent\"  />\r\n                    <Row>\r\n                        <Col>\r\n                        <h1 className =\"text-dark cg1p-header\">Employee Tasks</h1>\r\n                        <Placeholder xs={12} bg=\"transparent\"  />\r\n                        <h3 class=\"text-dark \">Keeping track of all employee tasks assigned</h3>\r\n                        <Placeholder xs={12} bg=\"transparent\"  />\r\n                            <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                                <table className=\"table text-dark\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Task</th>\r\n                                            <th>Created</th>\r\n                                            <th>Due</th>\r\n                                            <th>Update</th>\r\n                                            <th>Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            // script that for each todo, map it and display id, desc, done, targetDate, and buttons\r\n                                            this.state.todos.map(\r\n                                                todo =>\r\n                                                    <tr key={todo.id}>\r\n                                                        <td>{todo.description}</td>\r\n                                                        <td>{moment(todo.createdDate).format('YYYY-MM-DD')}</td>\r\n                                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                                        <td><button className=\"btn btn-warning\" onClick={() => this.updateTodoClicked(todo.id)}><GrUpdate /></button></td>\r\n                                                        <td><button className=\"btn btn-danger\" onClick={() => this.deleteTodoClicked(todo.id)}><FaTrashAlt /></button></td>\r\n                                                    </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className=\"d-grid gap-2\"><button className=\"btn btn-success\" onClick={() => this.addTodoClicked()}><GrAdd /></button></div>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\r\n                    \r\n\r\n\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTodosComponent","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\TodoDataService.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\HelloWorldService.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\NewsDataService.js",[],"C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\Components\\EmployeeManagementComponent.jsx",["167"],"\r\nimport Container from 'react-bootstrap/Container';\r\nimport Placeholder from 'react-bootstrap/Placeholder';\r\nimport React, { Component } from 'react';\r\nimport UserDataService from '../api/UserDataService';\r\nimport { SESSION_USER_BUSINESS } from '../Constants';\r\nimport { SESSION_USER_ROLE } from '../Constants';\r\n\r\n\r\n\r\n\r\nclass EmployeeManagementComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            employees: [],\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        UserDataService.retrieveUsersByBusiness(sessionStorage.getItem(SESSION_USER_BUSINESS))\r\n            .then(response => {\r\n                this.setState({ employees: response.data })\r\n            });\r\n    }\r\n\r\n    render() {\r\n\r\n        if (sessionStorage.getItem(SESSION_USER_ROLE) == \"ROLE_EMPLOYEE\") {\r\n\r\n            console.log(\"A\")\r\n            return (\r\n                <Container>\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                    <h1 className=\"text-dark cg1p-header\" >You are not authorized to access this</h1>\r\n                    <Placeholder xs={12} bg=\"transparent\" style={{paddingBottom: \"70vh\"}}/>\r\n                </Container>\r\n            )\r\n\r\n        } else {\r\n            console.log(\"B\")\r\n\r\n\r\n            return (\r\n                <div >\r\n                    <Container>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                        <h1 className=\"text-dark cg1p-header\" >Your Employees</h1>\r\n                        <Placeholder xs={12} bg=\"transparent\" />\r\n                        <h3 class=\"text-dark \">Employees and COVID/SHN Status</h3>\r\n                    </Container>\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                    <Container>\r\n                        <table className=\"table text-dark\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Has Covid</th>\r\n                                    <th>Has SHN</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.employees.map(\r\n                                        employee =>\r\n                                            <tr key={employee.id}>\r\n                                                <td>{employee.name}</td>\r\n                                                <td>{employee.email}</td>\r\n                                                <td>{employee.covidStatus.toString()}</td>\r\n                                                <td>{employee.shnStatus.toString()}</td>\r\n                                            </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </Container>\r\n                    <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default EmployeeManagementComponent;","C:\\Users\\Minh\\OneDrive\\Desktop\\CS 203 Project\\frontend\\todo-app\\src\\api\\FaqDataService.js",["168"],"import axios from 'axios';\r\nimport { API_URL, SCRAPPED_SOURCE } from '../Constants';\r\n\r\nclass FaqDataService {\r\n    retrieveAllFAQ() {\r\n        return axios.get(`${API_URL}/faq/retrieveFromDB`);\r\n    }\r\n}\r\n\r\nexport default new FaqDataService()",{"ruleId":"169","severity":1,"message":"170","line":4,"column":8,"nodeType":"171","messageId":"172","endLine":4,"endColumn":17},{"ruleId":"173","severity":1,"message":"174","line":50,"column":29,"nodeType":"175","endLine":50,"endColumn":280},{"ruleId":"169","severity":1,"message":"176","line":3,"column":10,"nodeType":"171","messageId":"172","endLine":3,"endColumn":15},{"ruleId":"169","severity":1,"message":"177","line":2,"column":31,"nodeType":"171","messageId":"172","endLine":2,"endColumn":43},{"ruleId":"169","severity":1,"message":"178","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":12},{"ruleId":"169","severity":1,"message":"179","line":17,"column":10,"nodeType":"171","messageId":"172","endLine":17,"endColumn":18},{"ruleId":"169","severity":1,"message":"180","line":19,"column":10,"nodeType":"171","messageId":"172","endLine":19,"endColumn":15},{"ruleId":"169","severity":1,"message":"181","line":20,"column":10,"nodeType":"171","messageId":"172","endLine":20,"endColumn":20},{"ruleId":"173","severity":1,"message":"174","line":139,"column":65,"nodeType":"175","endLine":139,"endColumn":229},{"ruleId":"173","severity":1,"message":"174","line":176,"column":33,"nodeType":"175","endLine":176,"endColumn":230},{"ruleId":"173","severity":1,"message":"174","line":331,"column":29,"nodeType":"175","endLine":331,"endColumn":192},{"ruleId":"173","severity":1,"message":"174","line":335,"column":29,"nodeType":"175","endLine":335,"endColumn":193},{"ruleId":"173","severity":1,"message":"174","line":347,"column":25,"nodeType":"175","endLine":347,"endColumn":144},{"ruleId":"169","severity":1,"message":"182","line":9,"column":8,"nodeType":"171","messageId":"172","endLine":9,"endColumn":19},{"ruleId":"173","severity":1,"message":"174","line":63,"column":37,"nodeType":"175","endLine":63,"endColumn":201},{"ruleId":"169","severity":1,"message":"178","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":12},{"ruleId":"169","severity":1,"message":"183","line":15,"column":8,"nodeType":"171","messageId":"172","endLine":15,"endColumn":14},{"ruleId":"169","severity":1,"message":"184","line":16,"column":8,"nodeType":"171","messageId":"172","endLine":16,"endColumn":24},{"ruleId":"185","severity":1,"message":"186","line":101,"column":27,"nodeType":"187","messageId":"188","endLine":101,"endColumn":29},{"ruleId":"169","severity":1,"message":"189","line":2,"column":8,"nodeType":"171","messageId":"172","endLine":2,"endColumn":14},{"ruleId":"190","severity":1,"message":"191","line":37,"column":21,"nodeType":"192","messageId":"193","endLine":37,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":38,"column":21,"nodeType":"192","messageId":"193","endLine":38,"endColumn":31},{"ruleId":"185","severity":1,"message":"194","line":55,"column":51,"nodeType":"187","messageId":"188","endLine":55,"endColumn":53},{"ruleId":"185","severity":1,"message":"186","line":85,"column":30,"nodeType":"187","messageId":"188","endLine":85,"endColumn":32},{"ruleId":"185","severity":1,"message":"186","line":106,"column":27,"nodeType":"187","messageId":"188","endLine":106,"endColumn":29},{"ruleId":"190","severity":1,"message":"191","line":116,"column":9,"nodeType":"192","messageId":"193","endLine":116,"endColumn":32},{"ruleId":"190","severity":1,"message":"191","line":123,"column":9,"nodeType":"192","messageId":"193","endLine":123,"endColumn":32},{"ruleId":"169","severity":1,"message":"178","line":6,"column":8,"nodeType":"171","messageId":"172","endLine":6,"endColumn":12},{"ruleId":"169","severity":1,"message":"195","line":10,"column":8,"nodeType":"171","messageId":"172","endLine":10,"endColumn":17},{"ruleId":"169","severity":1,"message":"196","line":11,"column":8,"nodeType":"171","messageId":"172","endLine":11,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":30,"column":55,"nodeType":"187","messageId":"188","endLine":30,"endColumn":57},{"ruleId":"169","severity":1,"message":"197","line":2,"column":19,"nodeType":"171","messageId":"172","endLine":2,"endColumn":34},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'Image' is defined but never used.","'ErrorMessage' is defined but never used.","'Card' is defined but never used.","'GrUpdate' is defined but never used.","'GrAdd' is defined but never used.","'FaTrashAlt' is defined but never used.","'NavDropdown' is defined but never used.","'Switch' is defined but never used.","'FormControlLabel' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Navbar' is defined but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","noDirectMutation","Expected '!==' and instead saw '!='.","'Offcanvas' is defined but never used.","'Button' is defined but never used.","'SCRAPPED_SOURCE' is defined but never used."]