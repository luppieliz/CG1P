{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\OneDrive\\\\Desktop\\\\CS 203 Project\\\\frontend\\\\todo-app\\\\src\\\\Components\\\\NewsFeedComponent.jsx\";\nimport React, { Component } from \"react\";\nimport Card from 'react-bootstrap/Card';\nimport Col from \"react-bootstrap/Col\";\nimport Row from \"react-bootstrap/Row\";\nimport Container from \"react-bootstrap/Container\";\nimport Placeholder from \"react-bootstrap/Placeholder\";\nimport NewsDataService from '../api/NewsDataService';\nimport Multiselect from 'multiselect-react-dropdown';\nimport Button from 'react-bootstrap/Button';\nimport '../newsfeed.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass NewsFeedComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onSelect = (selectedList, selectedItem) => {\n      //note usage of arrow function here, necessary as this refers to multiselect, not newsfeed component see https://stackoverflow.com/questions/32317154/react-uncaught-typeerror-cannot-read-property-setstate-of-undefined?rq=1\n      var tag = selectedItem['value'];\n      this.state.tagsSelected[tag] = true;\n      console.log(JSON.stringify(this.state.tagsSelected));\n    };\n\n    this.onRemove = (selectedList, removedItem) => {\n      var tag = removedItem['value'];\n      this.state.tagsSelected[tag] = false;\n      console.log(JSON.stringify(this.state.tagsSelected));\n    };\n\n    this.state = {\n      news: [],\n      newsDisplay: [],\n      isEmpty: false,\n      tagsSelected: {},\n      options: []\n    };\n  } //functions that run on load\n\n\n  componentDidMount() {\n    this.refreshNews();\n  } //function to retrieve all news items from the database\n\n\n  refreshNews() {\n    //TODO implement retrieve by date\n    NewsDataService.retrieveAllNews().then(response => {\n      this.state.isEmpty = response.data.length === 0;\n      this.setState({\n        news: response.data\n      });\n      this.setState({\n        newsDisplay: response.data\n      }); // console.log(\"retrieveall made\");\n\n      console.log(response);\n      this.generateTaglist();\n    });\n  } //function to generate a list of tags based on news retrieved\n  //todo: reduce time complexity\n\n\n  generateTaglist() {\n    var tags = {}; //list of existing tags\n\n    var output = []; //output format: [{value:\"tag1\"},{value:\"tag2\"}]\n\n    var idx = 0;\n\n    for (var i in this.state.news) {\n      if (this.state.news[i].tagList.length != 0) {\n        //iterate through news items and find ones with tags\n        var arr = this.state.news[i].tagList.split(\",\");\n\n        for (var s in arr) {\n          if (!tags.hasOwnProperty(arr[s])) {\n            //\n            tags[arr[s]] = 0; // console.log(\"adding \" + arr[s]);\n\n            output[idx] = {\n              value: arr[s]\n            };\n            idx++;\n          }\n        } // console.log(this.state.news[i].tagList);\n\n      }\n    }\n\n    this.setState({\n      options: output\n    });\n  } //function to call the api to push news into database DEV ONLY\n\n\n  apiButtonClicked() {\n    NewsDataService.triggerNewsApi().then(response => {\n      console.log(\"triggered api, storing to database\");\n      console.log(response);\n    });\n  } //function to process the tags and display at the bottom of the card\n\n\n  processTags(tagString) {\n    if (tagString.length == 0) {\n      return \"No tags\";\n    } else {\n      return tagString.split(\",\").join(\", \");\n    }\n  } //function to apply filters\n\n\n  showFilteredClicked() {\n    var output = [];\n    var idx = 0;\n\n    for (var tag in this.state.tagsSelected) {\n      if (this.state.tagsSelected[tag]) {\n        for (var i in this.state.news) {\n          //iterate through news with index i\n          if (this.state.news[i].tagList.includes(tag)) {\n            output[idx] = this.state.news[i];\n            idx++;\n          }\n        }\n      }\n    }\n\n    if (output.length == 0) {\n      this.setState({\n        newsDisplay: this.state.news\n      });\n    } else {\n      this.setState({\n        newsDisplay: output\n      });\n    }\n  } //function for when a filter option is selected\n\n\n  //root component of NewsFeed that displays header, footer, and news cards\n  render() {\n    //==========Column for news feed to display filtered news==========//\n    let newsFeedColumn; //display empty message if there is no news in this.state\n\n    if (this.state.isEmpty) {\n      newsFeedColumn = /*#__PURE__*/_jsxDEV(Card, {\n        className: \"text-dark\",\n        children: /*#__PURE__*/_jsxDEV(Card.Body, {\n          children: /*#__PURE__*/_jsxDEV(Card.Text, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"empty!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 30\n      }, this);\n    } else {\n      //iterate through all this.state.news items and display them in card form\n      newsFeedColumn = /*#__PURE__*/_jsxDEV(Row, {\n        xs: 1,\n        md: 1,\n        className: \"g-4\",\n        children: Array.from(this.state.newsDisplay, (_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            bg: 'dark',\n            children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: /*#__PURE__*/_jsxDEV(Card.Link, {\n                  href: this.state.newsDisplay[idx].url,\n                  children: this.state.newsDisplay[idx].title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: this.state.newsDisplay[idx].description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n              children: /*#__PURE__*/_jsxDEV(\"small\", {\n                className: \"text-muted\",\n                children: this.processTags(this.state.newsDisplay[idx].tagList)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 30\n      }, this);\n    } //==========Dropdown component to select filter options==========//\n    //https://www.npmjs.com/package/multiselect-react-dropdown for more options //consider grouping?\n\n\n    let dropdown = /*#__PURE__*/_jsxDEV(Multiselect, {\n      options: this.state.options // Options to display in the dropdown\n      ,\n      selectedValues: this.state.selectedValue // Preselected value to persist in dropdown\n      ,\n      onSelect: this.onSelect // Function will trigger on select event\n      ,\n      onRemove: this.onRemove // Function will trigger on remove event\n      ,\n      displayValue: \"value\" // Property name to display in the dropdown options\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 24\n    }, this); //==========Final render==========//\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-dark cg1p-header\",\n        children: \"News\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 9,\n            style: {\n              padding: \"0\"\n            },\n            children: dropdown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-dark\",\n              onClick: () => this.showFilteredClicked(),\n              children: \"Filter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            style: {\n              padding: \"0\"\n            },\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-dark\",\n              onClick: () => this.apiButtonClicked(),\n              children: \"Fetch News\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 192,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          children: newsFeedColumn\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\",\n        style: {\n          paddingBottom: \"50vh\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default NewsFeedComponent;","map":{"version":3,"sources":["C:/Users/Minh/OneDrive/Desktop/CS 203 Project/frontend/todo-app/src/Components/NewsFeedComponent.jsx"],"names":["React","Component","Card","Col","Row","Container","Placeholder","NewsDataService","Multiselect","Button","NewsFeedComponent","constructor","props","onSelect","selectedList","selectedItem","tag","state","tagsSelected","console","log","JSON","stringify","onRemove","removedItem","news","newsDisplay","isEmpty","options","componentDidMount","refreshNews","retrieveAllNews","then","response","data","length","setState","generateTaglist","tags","output","idx","i","tagList","arr","split","s","hasOwnProperty","value","apiButtonClicked","triggerNewsApi","processTags","tagString","join","showFilteredClicked","includes","render","newsFeedColumn","Array","from","_","url","title","description","dropdown","selectedValue","padding","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Card from 'react-bootstrap/Card'\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Row from \"react-bootstrap/Row\";\r\nimport Container from \"react-bootstrap/Container\";\r\nimport Placeholder from \"react-bootstrap/Placeholder\";\r\nimport NewsDataService from '../api/NewsDataService';\r\nimport Multiselect from 'multiselect-react-dropdown';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nimport '../newsfeed.css';\r\n\r\nclass NewsFeedComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            news: [],\r\n            newsDisplay: [],\r\n            isEmpty: false,\r\n            tagsSelected: {},\r\n            options: []\r\n        }\r\n    }\r\n\r\n    //functions that run on load\r\n    componentDidMount() {\r\n        this.refreshNews();\r\n    }\r\n\r\n    //function to retrieve all news items from the database\r\n    refreshNews() {\r\n        //TODO implement retrieve by date\r\n        NewsDataService.retrieveAllNews()\r\n            .then(\r\n                response => {\r\n                    this.state.isEmpty = response.data.length === 0;\r\n                    this.setState({ news: response.data })\r\n                    this.setState({ newsDisplay: response.data })\r\n                    // console.log(\"retrieveall made\");\r\n                    console.log(response);\r\n                    this.generateTaglist();\r\n                }\r\n            )\r\n    }\r\n\r\n    //function to generate a list of tags based on news retrieved\r\n    //todo: reduce time complexity\r\n    generateTaglist() {\r\n        var tags = {}; //list of existing tags\r\n        var output = []; //output format: [{value:\"tag1\"},{value:\"tag2\"}]\r\n        var idx = 0;\r\n        for (var i in this.state.news) {\r\n            if (this.state.news[i].tagList.length != 0) { //iterate through news items and find ones with tags\r\n                var arr = this.state.news[i].tagList.split(\",\");\r\n                for (var s in arr) {\r\n                    if (!tags.hasOwnProperty(arr[s])) { //\r\n                        tags[arr[s]] = 0;\r\n                        // console.log(\"adding \" + arr[s]);\r\n                        output[idx] = { value: arr[s] };\r\n                        idx++;\r\n                    }\r\n                }\r\n                // console.log(this.state.news[i].tagList);\r\n\r\n            }\r\n        }\r\n        this.setState({ options: output })\r\n    }\r\n\r\n    //function to call the api to push news into database DEV ONLY\r\n    apiButtonClicked() {\r\n        NewsDataService.triggerNewsApi()\r\n            .then(\r\n                response => {\r\n                    console.log(\"triggered api, storing to database\");\r\n                    console.log(response);\r\n                }\r\n            )\r\n    }\r\n\r\n    //function to process the tags and display at the bottom of the card\r\n    processTags(tagString) {\r\n        if (tagString.length == 0) {\r\n            return \"No tags\";\r\n        } else {\r\n            return tagString.split(\",\").join(\", \");\r\n        }\r\n    }\r\n\r\n    //function to apply filters\r\n    showFilteredClicked() {\r\n        var output = [];\r\n        var idx = 0;\r\n        for (var tag in this.state.tagsSelected) {\r\n            if (this.state.tagsSelected[tag]) {\r\n                for (var i in this.state.news) { //iterate through news with index i\r\n                    if (this.state.news[i].tagList.includes(tag)) {\r\n                        output[idx] = this.state.news[i];\r\n                        idx++;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (output.length == 0) {\r\n            this.setState({ newsDisplay: this.state.news });\r\n        } else {\r\n            this.setState({ newsDisplay: output });\r\n        }\r\n    }\r\n\r\n    //function for when a filter option is selected\r\n    onSelect = (selectedList, selectedItem) => { //note usage of arrow function here, necessary as this refers to multiselect, not newsfeed component see https://stackoverflow.com/questions/32317154/react-uncaught-typeerror-cannot-read-property-setstate-of-undefined?rq=1\r\n        var tag = selectedItem['value'];\r\n        this.state.tagsSelected[tag] = true;\r\n        console.log(JSON.stringify(this.state.tagsSelected));\r\n    }\r\n\r\n    //function for when a filter option is removed\r\n    onRemove = (selectedList, removedItem) => {\r\n        var tag = removedItem['value'];\r\n        this.state.tagsSelected[tag] = false;\r\n        console.log(JSON.stringify(this.state.tagsSelected));\r\n    }\r\n\r\n    //root component of NewsFeed that displays header, footer, and news cards\r\n    render() {\r\n\r\n        //==========Column for news feed to display filtered news==========//\r\n        let newsFeedColumn; //display empty message if there is no news in this.state\r\n        if (this.state.isEmpty) {\r\n            newsFeedColumn = <Card className=\"text-dark\">\r\n                <Card.Body>\r\n                    <Card.Text>\r\n                        <h1>empty!</h1>\r\n                    </Card.Text>\r\n                </Card.Body>\r\n            </Card>;\r\n        } else {\r\n            //iterate through all this.state.news items and display them in card form\r\n            newsFeedColumn = <Row xs={1} md={1} className=\"g-4\">\r\n                {Array.from(this.state.newsDisplay, (_, idx) => (\r\n                    <Col>\r\n                        <Card bg={'dark'}>\r\n                            {/*<Card.Img variant=\"top\" src=\"holder.js/100px160\" />*/}\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    <Card.Link href={this.state.newsDisplay[idx].url}>\r\n                                        {this.state.newsDisplay[idx].title}\r\n                                    </Card.Link>\r\n                                </Card.Title>\r\n                                <Card.Text>\r\n                                    {this.state.newsDisplay[idx].description}\r\n                                </Card.Text>\r\n                            </Card.Body>\r\n                            <Card.Footer>\r\n                                <small className=\"text-muted\">{this.processTags(this.state.newsDisplay[idx].tagList)}</small>\r\n                            </Card.Footer>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n            </Row>\r\n        }\r\n\r\n\r\n        //==========Dropdown component to select filter options==========//\r\n        //https://www.npmjs.com/package/multiselect-react-dropdown for more options //consider grouping?\r\n        let dropdown = <Multiselect\r\n            options={this.state.options} // Options to display in the dropdown\r\n            selectedValues={this.state.selectedValue} // Preselected value to persist in dropdown\r\n            onSelect={this.onSelect} // Function will trigger on select event\r\n            onRemove={this.onRemove} // Function will trigger on remove event\r\n            displayValue=\"value\" // Property name to display in the dropdown options\r\n        />\r\n\r\n\r\n        //==========Final render==========//\r\n        return (\r\n            <div>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <h1  className=\"text-dark cg1p-header\" >News</h1>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Container>\r\n                    <Row>\r\n                        <Col xs={9}  style={{padding: \"0\"}}>\r\n                            {dropdown}\r\n                        </Col>\r\n                        <Col style={{padding: \"0\"}}>\r\n                            <Button variant=\"outline-dark\" onClick={() => this.showFilteredClicked()}>Filter</Button>\r\n                        </Col>\r\n                        <Col style={{padding: \"0\"}}>\r\n                            <Button variant=\"outline-dark\" onClick={() => this.apiButtonClicked()}>Fetch News</Button>\r\n                            {/*//todo: make buttons toggle colour when toggled*/}\r\n                        </Col>\r\n                    </Row>\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                    <Row>\r\n                        {/*news column*/}\r\n                        {/*see newsFeedColumn definition for more information*/}\r\n                        {newsFeedColumn}\r\n\r\n                    </Row>\r\n                    <Placeholder xs={12} bg=\"transparent\" />\r\n                </Container>\r\n                <Placeholder xs={12} bg=\"transparent\" style={{paddingBottom: \"50vh\"}}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NewsFeedComponent;"]},"metadata":{},"sourceType":"module"}