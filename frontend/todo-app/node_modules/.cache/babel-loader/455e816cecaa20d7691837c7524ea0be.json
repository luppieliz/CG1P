{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\OneDrive\\\\Desktop\\\\CS 203 Project\\\\frontend\\\\todo-app\\\\src\\\\Components\\\\GeneralFaq.jsx\";\nimport React, { Component } from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Container from 'react-bootstrap/Container';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport FormControl from 'react-bootstrap/FormControl';\nimport Row from 'react-bootstrap/Row';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport Col from 'react-bootstrap/Col';\nimport Image from 'react-bootstrap/Image';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport FaqDataService from '../api/FaqDataService'; // Footer\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass GeneralFaq extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      faq: [],\n      faqDisplay: [],\n      isEmpty: false,\n      tagsSelected: {},\n      options: []\n    };\n  }\n\n  getFAQ() {\n    FaqDataService.retrieveAllFAQ().then(response => {\n      this.state.isEmpty = response.data.length === 0;\n      this.setState({\n        faq: response.data\n      }); // this.setState({ faqDisplay: response.data })\n      //             console.log(\"retrieval made\");\n      // console.log(response);\n      //             this.generateTaglist();\n      // console.log(this.state.faq[0]);\n\n      this.createUserDisplay();\n    });\n  }\n\n  createUserDisplay() {\n    //get the logged in user's lamnguage and industry\n    let userIndustry = \"F&B\"; //todo: set based on the logged in user\n\n    let userLanguage = \"English\";\n    let output = [];\n    let idx = 0;\n    console.log(this.state.faq); //traverse through the faq list to find matches\n\n    for (var faqCount in this.state.faq) {\n      let faqItem = this.state.faq[faqCount]; //if there is a match, add it to faqDisplay\n      // console.log(faqItem.language);\n      // console.log(faqItem.industry)\n\n      if (faqItem.language === userLanguage && faqItem.industry === userIndustry) {\n        output[idx] = faqItem;\n        idx++;\n      }\n    } //set the final list\n\n\n    console.log(output);\n    this.setState({\n      faqDisplay: output\n    });\n  }\n\n  componentDidMount() {\n    this.getFAQ();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"cg1p-header\",\n        children: [\"FAQ \", this.state.userName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), Array.from(this.state.faqDisplay, (_, idx) => /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          bg: 'dark',\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: this.state.faqDisplay[idx].url\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n            children: /*#__PURE__*/_jsxDEV(Card.Title, {\n              children: /*#__PURE__*/_jsxDEV(Card.Link, {\n                href: this.state.faqDisplay[idx].url,\n                children: this.state.faqDisplay[idx].industry\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            className: \"d-flex\",\n            children: [/*#__PURE__*/_jsxDEV(FormControl, {\n              type: \"search\",\n              placeholder: \"Search\",\n              className: \"mr-2\",\n              \"aria-label\": \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              src: \"\",\n              variant: \"outline-success\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n        xs: 12,\n        bg: \"transparent\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Accordion, {\n            children: [/*#__PURE__*/_jsxDEV(Accordion.Item, {\n              eventKey: \"0\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: \"Do i need to declare my onsite manpower details?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                className: \"text-black bg-white\",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"You are required to declare your onsite manpower if you received an email notifying you to submit your onsite manpower details, or if there is a \\u201CMPSubmit\\u201D reference number in your company dashboard after you have logged into GoBusiness. For companies in the Construction, Process and, Marine and Offshore Sectors Companies in the above sectors will not receive an email notification to submit manpower details but should still continue to submit their manpower details for the reference numbers they see in the system that are available to them. These companies are required to submit more information including NRIC/Fin numbers and premises/location details in their manpower declaration. These companies will not have an \\u201CMPSubmit\\u201D reference number.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n                      src: \"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\",\n                      fluid: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 137,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Accordion.Item, {\n              eventKey: \"1\",\n              children: [/*#__PURE__*/_jsxDEV(Accordion.Header, {\n                children: \"Why is it necessary for me to declare my onsite manpower details?\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Accordion.Body, {\n                className: \"text-black bg-white \",\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    children: \"You are required to declare your onsite manpower if you received an email notifying you to submit your onsite manpower details, or if there is a \\u201CMPSubmit\\u201D reference number in your company dashboard after you have logged into GoBusiness. For companies in the Construction, Process and, Marine and Offshore Sectors Companies in the above sectors will not receive an email notification to submit manpower details but should still continue to submit their manpower details for the reference numbers they see in the system that are available to them. These companies are required to submit more information including NRIC/Fin numbers and premises/location details in their manpower declaration. These companies will not have an \\u201CMPSubmit\\u201D reference number.\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: [\" \", /*#__PURE__*/_jsxDEV(Image, {\n                      src: \"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\",\n                      fluid: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 153,\n                      columnNumber: 47\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n          xs: 12,\n          bg: \"transparent\",\n          style: {\n            paddingBottom: \"50vh\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default GeneralFaq;","map":{"version":3,"sources":["C:/Users/Minh/OneDrive/Desktop/CS 203 Project/frontend/todo-app/src/Components/GeneralFaq.jsx"],"names":["React","Component","Navbar","Container","Form","Button","FormControl","Row","Placeholder","Col","Image","Card","Accordion","FaqDataService","GeneralFaq","constructor","props","state","faq","faqDisplay","isEmpty","tagsSelected","options","getFAQ","retrieveAllFAQ","then","response","data","length","setState","createUserDisplay","userIndustry","userLanguage","output","idx","console","log","faqCount","faqItem","language","industry","componentDidMount","render","userName","Array","from","_","url","paddingBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Navbar from 'react-bootstrap/Navbar'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\nimport FormControl from 'react-bootstrap/FormControl'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Placeholder from 'react-bootstrap/Placeholder'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Image from 'react-bootstrap/Image'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport FaqDataService from '../api/FaqDataService';\r\n\r\n\r\n\r\n\r\n// Footer\r\n\r\nclass GeneralFaq extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            faq: [],\r\n            faqDisplay: [],\r\n            isEmpty: false,\r\n            tagsSelected: {},\r\n            options: []\r\n        }\r\n    }\r\n\r\n    getFAQ() {\r\n        FaqDataService.retrieveAllFAQ()\r\n            .then(\r\n                response => {\r\n                    this.state.isEmpty = response.data.length === 0;\r\n                    this.setState({ faq: response.data })\r\n                    // this.setState({ faqDisplay: response.data })\r\n                    //             console.log(\"retrieval made\");\r\n                    // console.log(response);\r\n                    //             this.generateTaglist();\r\n                    // console.log(this.state.faq[0]);\r\n\r\n                    this.createUserDisplay();\r\n                }\r\n            )\r\n    }\r\n\r\n    createUserDisplay() {\r\n        //get the logged in user's lamnguage and industry\r\n        let userIndustry = \"F&B\"; //todo: set based on the logged in user\r\n        let userLanguage = \"English\";\r\n        let output = [];\r\n        let idx = 0;\r\n        console.log(this.state.faq);\r\n        //traverse through the faq list to find matches\r\n        for (var faqCount in this.state.faq) {\r\n            let faqItem = this.state.faq[faqCount];\r\n            //if there is a match, add it to faqDisplay\r\n            // console.log(faqItem.language);\r\n            // console.log(faqItem.industry)\r\n            if (faqItem.language === userLanguage && faqItem.industry === userIndustry) {\r\n                output[idx] = faqItem;\r\n                idx++;\r\n            }\r\n        }\r\n        //set the final list\r\n        console.log(output);\r\n        this.setState({ faqDisplay: output })\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getFAQ()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <h1 className=\"cg1p-header\">FAQ {this.state.userName}</h1>\r\n                {Array.from(this.state.faqDisplay, (_, idx) => (\r\n                    <Col>\r\n                        <Card bg={'dark'}>\r\n                            <Card.Img variant=\"top\" src={this.state.faqDisplay[idx].url} />\r\n                            <Card.Body>\r\n                                <Card.Title>\r\n                                    <Card.Link href={this.state.faqDisplay[idx].url}>\r\n                                        {this.state.faqDisplay[idx].industry}\r\n                                    </Card.Link>\r\n                                </Card.Title>\r\n                            </Card.Body>\r\n                        </Card>\r\n                    </Col>\r\n                ))}\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={5}>\r\n                        <Form className=\"d-flex\">\r\n                            <FormControl\r\n                                type=\"search\"\r\n                                placeholder=\"Search\"\r\n                                className=\"mr-2\"\r\n                                aria-label=\"Search\"\r\n                            />\r\n                            <Button src=\"\" variant=\"outline-success\">Search</Button>\r\n                        </Form>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n                <Placeholder xs={12} bg=\"transparent\" />\r\n\r\n                {/* the questions */}\r\n                <Container>\r\n                    <Row>\r\n\r\n                        <Accordion>\r\n                            <Accordion.Item eventKey=\"0\">\r\n                                <Accordion.Header>Do i need to declare my onsite manpower details?</Accordion.Header>\r\n                                <Accordion.Body className=\"text-black bg-white\">\r\n                                    <Row>\r\n                                        <Col>You are required to declare your onsite manpower if you received an email\r\n                                            notifying you to submit your onsite manpower details, or if there is a\r\n                                            “MPSubmit” reference number in your company dashboard after you have logged into GoBusiness.\r\n                                            For companies in the Construction, Process and, Marine and Offshore Sectors\r\n                                            Companies in the above sectors will not receive an email notification to submit manpower details but should still continue\r\n                                            to submit their manpower details for the reference numbers they see in the system that are available to them.\r\n                                            These companies are required to submit more information including NRIC/Fin numbers and premises/location\r\n                                            details in their manpower declaration. These companies will not have an “MPSubmit” reference number.</Col>\r\n                                        <Col> <Image src=\"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\" fluid /></Col>\r\n                                    </Row>\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n                            <Accordion.Item eventKey=\"1\">\r\n                                <Accordion.Header>Why is it necessary for me to declare my onsite manpower details?</Accordion.Header>\r\n                                <Accordion.Body className=\"text-black bg-white \" >\r\n                                    <Row>\r\n                                        <Col>You are required to declare your onsite manpower if you received an email\r\n                                            notifying you to submit your onsite manpower details, or if there is a\r\n                                            “MPSubmit” reference number in your company dashboard after you have logged into GoBusiness.\r\n                                            For companies in the Construction, Process and, Marine and Offshore Sectors\r\n                                            Companies in the above sectors will not receive an email notification to submit manpower details but should still continue\r\n                                            to submit their manpower details for the reference numbers they see in the system that are available to them.\r\n                                            These companies are required to submit more information including NRIC/Fin numbers and premises/location\r\n                                            details in their manpower declaration. These companies will not have an “MPSubmit” reference number.</Col>\r\n                                        <Col> <Image src=\"https://static6.depositphotos.com/1131998/649/v/600/depositphotos_6490192-stock-illustration-smile-face.jpg\" fluid /></Col>\r\n                                    </Row>\r\n                                </Accordion.Body>\r\n                            </Accordion.Item>\r\n                        </Accordion>\r\n\r\n\r\n                    </Row>\r\n                    <Placeholder xs={12} bg=\"transparent\" style={{ paddingBottom: \"50vh\" }} />\r\n                </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GeneralFaq"]},"metadata":{},"sourceType":"module"}