{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\OneDrive\\\\Desktop\\\\CS 203 Project\\\\frontend\\\\todo-app\\\\src\\\\Components\\\\ListTodosComponent.jsx\";\nimport React, { Component } from 'react';\nimport TodoDataService from '../api/TodoDataService';\nimport AuthenticationService from '../api/AuthenticationService.js';\nimport moment from 'moment';\nimport Placeholder from 'react-bootstrap/Placeholder';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // Display a list of all Todos, where the user can manage, add, update, delete todos.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props); // State - contains the array of todos, as well as a message for deleteTodo successful\n\n    this.state = {\n      todos: [],\n      message: null\n    };\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n  } // bring todos from axios get into current state for display, after initial render has been triggered.\n\n\n  componentDidMount() {\n    this.refreshTodos();\n  } // same as above, but for subsequent refreshes\n\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInEmail();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      this.setState({\n        todos: response.data\n      }); // console.log(response)\n    });\n  } // handler for when delete todo is clicked\n\n\n  deleteTodoClicked(todoId) {\n    let username = AuthenticationService.getLoggedInEmail();\n    TodoDataService.deleteTodo(username, todoId).then(response => {\n      this.setState({\n        message: `Delete of todo ${todoId} was successful`\n      });\n      this.refreshTodos();\n    });\n  } // handler for when update todo is clicked\n\n\n  updateTodoClicked(todoId) {\n    this.props.history.push(`/todos/${todoId}`);\n  } // handler for when add todo is clicked\n\n\n  addTodoClicked() {\n    this.props.history.push(`/todos/-1`);\n  } // jsx render for entire table\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backgroundImage: \"url(https://motionarray.imgix.net/preview-133720-7DNFEig4mX-high_0000.jpg\",\n        backgroundPosition: 'center',\n        backgroundSize: 'cover',\n        backgroundRepeat: 'no-repeat',\n        width: '100%',\n        height: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: 6,\n          children: /*#__PURE__*/_jsxDEV(Container, {\n            children: [/*#__PURE__*/_jsxDEV(Placeholder, {\n              xs: 12,\n              bg: \"transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n              className: \"text-dark\",\n              children: \"MY LIST\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Placeholder, {\n              xs: 12,\n              bg: \"transparent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-dark\",\n              children: [this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-success\",\n                children: this.state.message\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 79\n              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                className: \"table text-dark\",\n                children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Description\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Is Completed\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Target Date\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 87,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                  children: // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                  this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: todo.description\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: todo.done.toString()\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: moment(todo.targetDate).format('YYYY-MM-DD')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-success\",\n                        onClick: () => this.updateTodoClicked(todo.id),\n                        children: \"Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 104,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-warning\",\n                        onClick: () => this.deleteTodoClicked(todo.id),\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 105,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 57\n                    }, this)]\n                  }, todo.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"row\",\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-success\",\n                  onClick: () => this.addTodoClicked(),\n                  children: \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListTodosComponent;","map":{"version":3,"sources":["C:/Users/Minh/OneDrive/Desktop/CS 203 Project/frontend/todo-app/src/Components/ListTodosComponent.jsx"],"names":["React","Component","TodoDataService","AuthenticationService","moment","Placeholder","Card","Container","Row","Col","ListTodosComponent","constructor","props","state","todos","message","updateTodoClicked","bind","deleteTodoClicked","addTodoClicked","refreshTodos","componentDidMount","username","getLoggedInEmail","retrieveAllTodos","then","response","setState","data","todoId","deleteTodo","history","push","render","backgroundImage","backgroundPosition","backgroundSize","backgroundRepeat","width","height","map","todo","description","done","toString","targetDate","format","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport TodoDataService from '../api/TodoDataService';\r\nimport AuthenticationService from '../api/AuthenticationService.js';\r\nimport moment from 'moment'\r\nimport Placeholder from 'react-bootstrap/Placeholder'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n\r\n// Display a list of all Todos, where the user can manage, add, update, delete todos.\r\nclass ListTodosComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // State - contains the array of todos, as well as a message for deleteTodo successful\r\n        this.state = {\r\n            todos: [],\r\n            message: null\r\n        }\r\n        this.updateTodoClicked = this.updateTodoClicked.bind(this);\r\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\r\n        this.addTodoClicked = this.addTodoClicked.bind(this);\r\n        this.refreshTodos = this.refreshTodos.bind(this);\r\n    }\r\n\r\n    // bring todos from axios get into current state for display, after initial render has been triggered.\r\n    componentDidMount() {\r\n        this.refreshTodos();\r\n    }\r\n\r\n    // same as above, but for subsequent refreshes\r\n    refreshTodos() {\r\n        let username = AuthenticationService.getLoggedInEmail();\r\n        TodoDataService.retrieveAllTodos(username)\r\n            .then(\r\n                response => {\r\n                    this.setState({ todos: response.data })\r\n                    // console.log(response)\r\n                }\r\n            )\r\n    }\r\n\r\n    // handler for when delete todo is clicked\r\n    deleteTodoClicked(todoId) {\r\n        let username = AuthenticationService.getLoggedInEmail();\r\n        TodoDataService.deleteTodo(username, todoId)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete of todo ${todoId} was successful` });\r\n                    this.refreshTodos();\r\n                }\r\n            )\r\n    }\r\n\r\n    // handler for when update todo is clicked\r\n    updateTodoClicked(todoId) {\r\n        this.props.history.push(`/todos/${todoId}`);\r\n    }\r\n\r\n    // handler for when add todo is clicked\r\n    addTodoClicked() {\r\n        this.props.history.push(`/todos/-1`);\r\n    }\r\n\r\n    // jsx render for entire table\r\n    render() {\r\n        return (\r\n\r\n            <div style={{ backgroundImage: \"url(https://motionarray.imgix.net/preview-133720-7DNFEig4mX-high_0000.jpg\"\r\n            ,backgroundPosition: 'center'\r\n            ,backgroundSize: 'cover'\r\n            ,backgroundRepeat: 'no-repeat'\r\n            ,width: '100%'\r\n            ,height: '100%'\r\n            }}>\r\n                <Row>\r\n                    <Col></Col>\r\n                    <Col xs={6}>\r\n                        <Container>\r\n                            <Placeholder xs={12} bg=\"transparent\" />\r\n                            <h1 className=\"text-dark\">MY LIST</h1>\r\n                            <Placeholder xs={12} bg=\"transparent\"  />\r\n                            <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                                <table className=\"table text-dark\">\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>Description</th>\r\n                                            <th>Is Completed</th>\r\n                                            <th>Target Date</th>\r\n                                            <th>Update</th>\r\n                                            <th>Delete</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {\r\n                                            // script that for each todo, map it and display id, desc, done, targetDate, and buttons\r\n                                            this.state.todos.map(\r\n                                                todo =>\r\n                                                    <tr key={todo.id}>\r\n                                                        <td>{todo.description}</td>\r\n                                                        <td>{todo.done.toString()}</td>\r\n                                                        <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                                        <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\r\n                                                        <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\r\n                                                    </tr>\r\n                                            )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                <div className=\"row\"><button className=\"btn btn-success\" onClick={() => this.addTodoClicked()}>Add</button></div>\r\n                            </div>\r\n                        </Container>\r\n                    </Col>\r\n                    <Col></Col>\r\n                </Row>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListTodosComponent;"]},"metadata":{},"sourceType":"module"}