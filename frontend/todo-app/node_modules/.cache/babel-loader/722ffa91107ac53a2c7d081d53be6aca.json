{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\OneDrive\\\\Desktop\\\\CS 203 Project\\\\frontend\\\\todo-app\\\\src\\\\Components\\\\todo\\\\WelcomeComponent.jsx\";\nimport React, { Component } from 'react'; // import routing features\n\nimport { Link } from 'react-router-dom';\nimport HelloWorldService from '../../api/todo/HelloWorldService'; // Welcome landing page, that links to the Todos page.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass WelcomeComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.retrieveWelcomeMessage = this.retrieveWelcomeMessage.bind(this);\n    this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this);\n    this.handleError = this.handleError.bind(this);\n    this.state = {\n      welcomeMessage: '',\n      errorMessage: ''\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-white\",\n        children: \"Welcome\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-white\",\n        children: [\"Welcome \", this.props.match.params.name, \". You can manage your todos \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/todos\",\n          children: \"here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 87\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-white\",\n        children: [\"Click here to get a customized welcome message.\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.retrieveWelcomeMessage,\n          className: \"btn btn-success\",\n          children: \"Get Welcome Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-white\",\n        children: this.state.welcomeMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container text-white\",\n        children: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n  retrieveWelcomeMessage() {\n    // HelloWorldService.executeHelloWorldService()\n    //     .then(response => this.handleSuccessfulResponse(response));\n    // HelloWorldService.executeHelloWorldBeanService()\n    //     .then(response => this.handleSuccessfulResponse(response));\n    HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name).then(response => this.handleSuccessfulResponse(response)).catch(error => this.handleError(error));\n  }\n\n  handleSuccessfulResponse(response) {\n    this.setState({\n      welcomeMessage: response.data.message\n    });\n  }\n\n  handleError(error) {\n    console.log(error.response);\n    let errorMessage = '';\n\n    if (error.message) {\n      errorMessage += error.message;\n    }\n\n    if (error.response && error.response.data) {\n      errorMessage += error.response.data.message;\n    }\n\n    this.setState({\n      errorMessage: errorMessage\n    });\n  }\n\n}\n\nexport default WelcomeComponent;","map":{"version":3,"sources":["C:/Users/Minh/OneDrive/Desktop/CS 203 Project/frontend/todo-app/src/Components/todo/WelcomeComponent.jsx"],"names":["React","Component","Link","HelloWorldService","WelcomeComponent","constructor","props","retrieveWelcomeMessage","bind","handleSuccessfulResponse","handleError","state","welcomeMessage","errorMessage","render","match","params","name","executeHelloWorldPathVariableService","then","response","catch","error","setState","data","message","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,iBAAP,MAA8B,kCAA9B,C,CAEA;;;;;AACA,MAAMC,gBAAN,SAA+BH,SAA/B,CAAyC;AACrCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,sBAAL,GAA8B,KAAKA,sBAAL,CAA4BC,IAA5B,CAAiC,IAAjC,CAA9B;AACA,SAAKC,wBAAL,GAAgC,KAAKA,wBAAL,CAA8BD,IAA9B,CAAmC,IAAnC,CAAhC;AACA,SAAKE,WAAL,GAAmB,KAAKA,WAAL,CAAiBF,IAAjB,CAAsB,IAAtB,CAAnB;AAEA,SAAKG,KAAL,GAAa;AACTC,MAAAA,cAAc,EAAE,EADP;AAETC,MAAAA,YAAY,EAAE;AAFL,KAAb;AAIH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,+BACa,KAAKR,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,IADrC,+CACsE,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,QAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADtE;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAKI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,mFAEI;AAAQ,UAAA,OAAO,EAAE,KAAKV,sBAAtB;AAA8C,UAAA,SAAS,EAAC,iBAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eASI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACK,KAAKI,KAAL,CAAWC;AADhB;AAAA;AAAA;AAAA;AAAA,cATJ,eAYI;AAAK,QAAA,SAAS,EAAC,sBAAf;AAAA,kBACK,KAAKD,KAAL,CAAWE;AADhB;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA,oBADJ;AAoBH;;AAEDN,EAAAA,sBAAsB,GAAG;AAErB;AACA;AAEA;AACA;AAEAJ,IAAAA,iBAAiB,CAACe,oCAAlB,CAAuD,KAAKZ,KAAL,CAAWS,KAAX,CAAiBC,MAAjB,CAAwBC,IAA/E,EACKE,IADL,CACUC,QAAQ,IAAI,KAAKX,wBAAL,CAA8BW,QAA9B,CADtB,EAEKC,KAFL,CAEWC,KAAK,IAAI,KAAKZ,WAAL,CAAiBY,KAAjB,CAFpB;AAIH;;AAEDb,EAAAA,wBAAwB,CAACW,QAAD,EAAW;AAC/B,SAAKG,QAAL,CAAc;AAAEX,MAAAA,cAAc,EAAEQ,QAAQ,CAACI,IAAT,CAAcC;AAAhC,KAAd;AACH;;AAEDf,EAAAA,WAAW,CAACY,KAAD,EAAQ;AACfI,IAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACF,QAAlB;AACA,QAAIP,YAAY,GAAG,EAAnB;;AACA,QAAGS,KAAK,CAACG,OAAT,EAAkB;AACdZ,MAAAA,YAAY,IAAIS,KAAK,CAACG,OAAtB;AACH;;AACD,QAAGH,KAAK,CAACF,QAAN,IAAkBE,KAAK,CAACF,QAAN,CAAeI,IAApC,EAA0C;AACtCX,MAAAA,YAAY,IAAIS,KAAK,CAACF,QAAN,CAAeI,IAAf,CAAoBC,OAApC;AACH;;AAED,SAAKF,QAAL,CAAc;AAAEV,MAAAA,YAAY,EAAEA;AAAhB,KAAd;AACH;;AAjEoC;;AAqEzC,eAAeT,gBAAf","sourcesContent":["import React, { Component } from 'react'\r\n// import routing features\r\nimport { Link } from 'react-router-dom'\r\nimport HelloWorldService from '../../api/todo/HelloWorldService'\r\n\r\n// Welcome landing page, that links to the Todos page.\r\nclass WelcomeComponent extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.retrieveWelcomeMessage = this.retrieveWelcomeMessage.bind(this);\r\n        this.handleSuccessfulResponse = this.handleSuccessfulResponse.bind(this);\r\n        this.handleError = this.handleError.bind(this);\r\n\r\n        this.state = {\r\n            welcomeMessage: '',\r\n            errorMessage: ''\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <h1  className=\"text-white\">Welcome</h1>\r\n                <div className=\"container text-white\">\r\n                    Welcome {this.props.match.params.name}. You can manage your todos <Link to=\"/todos\">here</Link>\r\n                </div>\r\n                <div className=\"container text-white\">\r\n                    Click here to get a customized welcome message.\r\n                    <button onClick={this.retrieveWelcomeMessage} className=\"btn btn-success\">Get Welcome Message</button>\r\n                </div>\r\n                <div className=\"container text-white\">\r\n                    {this.state.welcomeMessage}\r\n                </div>\r\n                <div className=\"container text-white\">\r\n                    {this.state.errorMessage}\r\n                </div>\r\n            </>\r\n\r\n\r\n        )\r\n    }\r\n\r\n    retrieveWelcomeMessage() {\r\n\r\n        // HelloWorldService.executeHelloWorldService()\r\n        //     .then(response => this.handleSuccessfulResponse(response));\r\n\r\n        // HelloWorldService.executeHelloWorldBeanService()\r\n        //     .then(response => this.handleSuccessfulResponse(response));\r\n\r\n        HelloWorldService.executeHelloWorldPathVariableService(this.props.match.params.name)\r\n            .then(response => this.handleSuccessfulResponse(response))\r\n            .catch(error => this.handleError(error));\r\n\r\n    }\r\n\r\n    handleSuccessfulResponse(response) {\r\n        this.setState({ welcomeMessage: response.data.message })\r\n    }\r\n\r\n    handleError(error) {\r\n        console.log(error.response)\r\n        let errorMessage = '';\r\n        if(error.message) {\r\n            errorMessage += error.message\r\n        }\r\n        if(error.response && error.response.data) {\r\n            errorMessage += error.response.data.message\r\n        }\r\n\r\n        this.setState({ errorMessage: errorMessage })\r\n    }\r\n\r\n}\r\n\r\nexport default WelcomeComponent;"]},"metadata":{},"sourceType":"module"}