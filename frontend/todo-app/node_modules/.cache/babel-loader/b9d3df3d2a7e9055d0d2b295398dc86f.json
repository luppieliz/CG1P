{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\OneDrive\\\\Desktop\\\\CS 203 Project\\\\frontend\\\\todo-app\\\\src\\\\Components\\\\SideBarComponent.jsx\";\nimport React, { Component, setState } from 'react';\nimport Offcanvas from 'react-bootstrap/Offcanvas';\nimport Button from 'react-bootstrap/Button'; //for todo\n\nimport TodoDataService from '../api/TodoDataService';\nimport AuthenticationService from '../api/AuthenticationService.js';\nimport moment from 'moment';\nimport Card from 'react-bootstrap/Card';\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col'; // import Modal from 'react-bootstrap/Modal'\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SideBarComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.handleShow = this.handleShow.bind(this);\n    this.handleClose = this.handleClose.bind(this); // this.handleShow = this.handleShowModal.bind(this);\n    // this.handleClose = this.handleCloseModal.bind(this);\n\n    this.updateTodoClicked = this.updateTodoClicked.bind(this);\n    this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\n    this.addTodoClicked = this.addTodoClicked.bind(this);\n    this.refreshTodos = this.refreshTodos.bind(this);\n    this.state = {\n      showSidebar: false,\n      showModal: false,\n      todos: [],\n      message: null\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      showSidebar: false\n    }); // this.setState({ showModal: false });\n\n    this.refreshTodos();\n  }\n\n  handleClose() {\n    //sidebar\n    this.setState({\n      showSidebar: false\n    });\n  }\n\n  handleShow() {\n    //sidebar\n    this.setState({\n      showSidebar: true\n    });\n  } // handleCloseModal() { //MODAL \n  //     this.setState({ showModal: false });\n  // }\n  // handleShowModal() { //MODAL\n  //     this.setState({ showModal: true });\n  // }\n\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInEmail();\n    TodoDataService.retrieveAllTodos(username).then(response => {\n      this.setState({\n        todos: response.data\n      }); // console.log(response)\n    });\n  }\n\n  deleteTodoClicked(todoId) {\n    let username = AuthenticationService.getLoggedInEmail();\n    TodoDataService.deleteTodo(username, todoId).then(response => {\n      this.setState({\n        message: `Delete of todo ${todoId} was successful`\n      });\n      this.refreshTodos();\n    });\n  }\n\n  updateTodoClicked(todoId) {\n    this.props.history.push(`/todos/${todoId}`);\n  }\n\n  addTodoClicked() {\n    this.props.history.push(`/todos/-1`);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          onClick: this.handleShow,\n          children: \"TODOS\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Offcanvas, {\n          show: this.state.showSidebar,\n          onHide: this.handleClose,\n          children: [/*#__PURE__*/_jsxDEV(Offcanvas.Header, {\n            closeButton: true,\n            children: /*#__PURE__*/_jsxDEV(Offcanvas.Title, {\n              className: \"text-dark\",\n              children: \"My Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Offcanvas.Body, {\n            className: \"text-dark\",\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Card, {\n                  className: \"text-dark\",\n                  children: /*#__PURE__*/_jsxDEV(Card.Body, {\n                    children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n                        children: \"Todos\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 45\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"text-dark\",\n                  children: [this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-success\",\n                    children: this.state.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 87\n                  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                    className: \"table text-dark\",\n                    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Task\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 121,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Done?\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 122,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Due\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 123,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Update\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 124,\n                          columnNumber: 53\n                        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                          children: \"Delete\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 125,\n                          columnNumber: 53\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 120,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                      children: // script that for each todo, map it and display id, desc, done, targetDate, and buttons\n                      this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                          children: todo.description\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 134,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: todo.done.toString()\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 135,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: moment(todo.targetDate).format('YYYY-MM-DD')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 136,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-success\",\n                            onClick: () => this.updateTodoClicked(todo.id),\n                            children: \"Update\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 137,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 137,\n                          columnNumber: 61\n                        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                          children: /*#__PURE__*/_jsxDEV(\"button\", {\n                            className: \"btn btn-warning\",\n                            onClick: () => this.deleteTodoClicked(todo.id),\n                            children: \"Delete\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 138,\n                            columnNumber: 65\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 61\n                        }, this)]\n                      }, todo.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 133,\n                        columnNumber: 57\n                      }, this))\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 128,\n                      columnNumber: 45\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"row\",\n                    children: /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-success\",\n                      onClick: () => this.addTodoClicked(),\n                      children: \"Add\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 144,\n                      columnNumber: 62\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SideBarComponent;","map":{"version":3,"sources":["C:/Users/Minh/OneDrive/Desktop/CS 203 Project/frontend/todo-app/src/Components/SideBarComponent.jsx"],"names":["React","Component","setState","Offcanvas","Button","TodoDataService","AuthenticationService","moment","Card","Container","Row","Col","SideBarComponent","constructor","props","handleShow","bind","handleClose","updateTodoClicked","deleteTodoClicked","addTodoClicked","refreshTodos","state","showSidebar","showModal","todos","message","componentDidMount","username","getLoggedInEmail","retrieveAllTodos","then","response","data","todoId","deleteTodo","history","push","render","map","todo","description","done","toString","targetDate","format","id"],"mappings":"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","sourcesContent":["import React, { Component,setState} from 'react'\r\n\r\nimport Offcanvas from 'react-bootstrap/Offcanvas'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\n//for todo\r\nimport TodoDataService from '../api/TodoDataService';\r\nimport AuthenticationService from '../api/AuthenticationService.js'\r\nimport moment from 'moment'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Container from 'react-bootstrap/Container'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\n// import Modal from 'react-bootstrap/Modal'\r\n\r\nclass SideBarComponent extends Component {\r\n\r\n    constructor(props) {\r\n\r\n        super(props);\r\n        this.handleShow = this.handleShow.bind(this);\r\n        this.handleClose = this.handleClose.bind(this);\r\n\r\n        // this.handleShow = this.handleShowModal.bind(this);\r\n        // this.handleClose = this.handleCloseModal.bind(this);\r\n\r\n        this.updateTodoClicked = this.updateTodoClicked.bind(this);\r\n        this.deleteTodoClicked = this.deleteTodoClicked.bind(this);\r\n        this.addTodoClicked = this.addTodoClicked.bind(this);\r\n        this.refreshTodos = this.refreshTodos.bind(this);\r\n\r\n        this.state = {\r\n            showSidebar: false,\r\n            showModal: false,\r\n            todos: [],\r\n            message: null\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({ showSidebar: false });\r\n        // this.setState({ showModal: false });\r\n        this.refreshTodos();\r\n    }\r\n\r\n    handleClose() { //sidebar\r\n        this.setState({ showSidebar: false });\r\n    }\r\n\r\n    handleShow() { //sidebar\r\n        this.setState({ showSidebar: true });\r\n    }\r\n\r\n    // handleCloseModal() { //MODAL \r\n    //     this.setState({ showModal: false });\r\n    // }\r\n\r\n    // handleShowModal() { //MODAL\r\n    //     this.setState({ showModal: true });\r\n    // }\r\n\r\n    refreshTodos() {\r\n        let username = AuthenticationService.getLoggedInEmail();\r\n        TodoDataService.retrieveAllTodos(username)\r\n            .then(\r\n                response => {\r\n                    this.setState({ todos: response.data })\r\n                    // console.log(response)\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteTodoClicked(todoId) {\r\n        let username = AuthenticationService.getLoggedInEmail();\r\n        TodoDataService.deleteTodo(username, todoId)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete of todo ${todoId} was successful` });\r\n                    this.refreshTodos();\r\n                }\r\n            )\r\n    }\r\n\r\n    updateTodoClicked(todoId) {\r\n        this.props.history.push(`/todos/${todoId}`);\r\n    }\r\n\r\n    addTodoClicked() {\r\n        this.props.history.push(`/todos/-1`);\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Container>\r\n                    <Button variant=\"primary\" onClick={this.handleShow}>\r\n                        TODOS\r\n                    </Button>\r\n                    <Offcanvas show={this.state.showSidebar} onHide={this.handleClose}>\r\n                        <Offcanvas.Header closeButton>\r\n                            <Offcanvas.Title className=\"text-dark\">My Tasks</Offcanvas.Title>\r\n                        </Offcanvas.Header>\r\n                        <Offcanvas.Body className=\"text-dark\">\r\n                            <Row>\r\n                                <Col>\r\n                                \r\n                                    <Card className=\"text-dark\">\r\n                                        {/* <Card.Img variant=\"top\" src=\"holder.js/100px180\" /> */}\r\n                                        <Card.Body>\r\n                                            <Card.Text>\r\n                                                <h1>Todos</h1>\r\n                                            </Card.Text>\r\n                                        </Card.Body>\r\n                                    </Card>\r\n                                    <div className=\"text-dark\">{this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\r\n                                        <table className=\"table text-dark\">\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>Task</th>\r\n                                                    <th>Done?</th>\r\n                                                    <th>Due</th>\r\n                                                    <th>Update</th>\r\n                                                    <th>Delete</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {\r\n                                                // script that for each todo, map it and display id, desc, done, targetDate, and buttons\r\n                                                this.state.todos.map(\r\n                                                    todo =>\r\n                                                        <tr key={todo.id}>\r\n                                                            <td>{todo.description}</td>\r\n                                                            <td>{todo.done.toString()}</td>\r\n                                                            <td>{moment(todo.targetDate).format('YYYY-MM-DD')}</td>\r\n                                                            <td><button className=\"btn btn-success\" onClick={() => this.updateTodoClicked(todo.id)}>Update</button></td>\r\n                                                            <td><button className=\"btn btn-warning\" onClick={() => this.deleteTodoClicked(todo.id)}>Delete</button></td>\r\n                                                        </tr>\r\n                                                    )\r\n                                                }\r\n                                            </tbody>\r\n                                        </table>\r\n                                        <div className=\"row\"><button className=\"btn btn-success\" onClick={() => this.addTodoClicked()}>Add</button></div>\r\n                                    </div>\r\n                                </Col>\r\n                            </Row>\r\n                        </Offcanvas.Body>\r\n                    </Offcanvas>\r\n                </Container>\r\n\r\n                {/* <Button variant=\"primary\" onClick={this.handleShowModal}>\r\n                    Launch demo modal\r\n                </Button>\r\n\r\n                <Modal show ={this.state.showModal} onHide={this.handleCloseModal}>\r\n                    <Modal.Header closeButton>\r\n                        <Modal.Title>Modal heading</Modal.Title>\r\n                    </Modal.Header>\r\n                    <Modal.Body>Woohoo, you're reading this text in a modal!</Modal.Body>\r\n                    <Modal.Footer>\r\n                        <Button variant=\"secondary\" onClick={this.handleCloseModal}>\r\n                            Close\r\n                        </Button>\r\n                        <Button variant=\"primary\" onClick={this.handleCloseModal}>\r\n                            Save Changes\r\n                        </Button>\r\n                    </Modal.Footer>\r\n                </Modal> */}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default SideBarComponent;"]},"metadata":{},"sourceType":"module"}