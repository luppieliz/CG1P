{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Minh\\\\OneDrive\\\\Desktop\\\\CS 203 Project\\\\frontend\\\\todo-app\\\\src\\\\Components\\\\todo\\\\AuthenticatedRoute.jsx\";\nimport React, { Component } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService.js'; // Ensures user is authenticated before granting access to a route, else redirect to login\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AuthenticatedRoute extends Component {\n  render() {\n    if (AuthenticationService.isUserLoggedIn()) {\n      // spread operator - take all properties\n      return /*#__PURE__*/_jsxDEV(Route, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 21\n      }, this);\n    }\n  }\n\n}\n\nexport default AuthenticatedRoute;","map":{"version":3,"sources":["C:/Users/Minh/OneDrive/Desktop/CS 203 Project/frontend/todo-app/src/Components/todo/AuthenticatedRoute.jsx"],"names":["React","Component","Route","Redirect","AuthenticationService","AuthenticatedRoute","render","isUserLoggedIn","props"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,qBAAP,MAAkC,4BAAlC,C,CAEA;;;;AACA,MAAMC,kBAAN,SAAiCJ,SAAjC,CAA2C;AACvCK,EAAAA,MAAM,GAAG;AACL,QAAGF,qBAAqB,CAACG,cAAtB,EAAH,EAA2C;AACvC;AACA,0BAAO,QAAC,KAAD,OAAW,KAAKC;AAAhB;AAAA;AAAA;AAAA;AAAA,cAAP;AACH,KAHD,MAGO;AACH,0BAAQ,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAd;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;AACJ;;AARsC;;AAW3C,eAAeH,kBAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport AuthenticationService from './AuthenticationService.js';\r\n\r\n// Ensures user is authenticated before granting access to a route, else redirect to login\r\nclass AuthenticatedRoute extends Component {\r\n    render() {\r\n        if(AuthenticationService.isUserLoggedIn()) {\r\n            // spread operator - take all properties\r\n            return <Route {...this.props}/>\r\n        } else {\r\n            return  <Redirect to =\"/login\"/>\r\n        }\r\n    }\r\n}\r\n\r\nexport default AuthenticatedRoute;"]},"metadata":{},"sourceType":"module"}